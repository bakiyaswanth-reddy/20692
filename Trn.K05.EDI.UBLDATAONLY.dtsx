<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/3/2025 1:35:45 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="H3DEVOPIPWRK19"
  DTS:CreatorName="H3DEVOPS\bakiyaswanth.reddy"
  DTS:DelayValidation="True"
  DTS:DTSID="{08D59406-EB88-4A09-8F5F-C5FD83336A46}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="Trn K05 EDI UBLDATAONLY"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="282"
  DTS:VersionGUID="{1B39434C-4864-474C-AC51-45C936BA42CC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Conn_PackageIFDelete]"
      DTS:CreationName="FILE"
      DTS:DTSID="{186D8925-5352-4A00-882D-39DD3DF06D68}"
      DTS:ObjectName="Conn_PackageIFDelete">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PackageIFDelete]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="\\devapp02ipstgpne.file.core.windows.net\fs-ip-bin\ssis\Invoices\Trn.K05.IF.Delete.dtsx" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FbpFrameworkDb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5F72D68A-9798-4AF9-86EA-AF29FED5FF48}"
      DTS:ObjectName="FbpFrameworkDb">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FrameworkConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectUsingManagedIdentity="True"
          DTS:ConnectionString="Data Source=devapp-02-amb-mi.c36d19284d11.database.windows.net;User ID=SQLAdmin;Initial Catalog=FbpFrameworkDb;Provider=MSOLEDBSQL.1;Persist Security Info=True;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"></DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[InvoiceFulfilmentData]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CC45E353-B43D-402B-BA97-86B2FCC5941E}"
      DTS:ObjectName="InvoiceFulfilmentData">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::InvoiceFulfilmentConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=devapp-02-amb-mi.c36d19284d11.database.windows.net;Initial Catalog=InvoiceFulfilment_{0};Provider=SQLNCLI11.1;Integrated Security=SSPI;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[rLocationManifestFile]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EB773E15-C658-4B0F-95AF-58B4A1A88770}"
      DTS:ObjectName="rLocationManifestFile">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::DestinationManifestFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001"
          DTS:ConnectionString="C:\YASWANTH\EDIDataOnly">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="302"
              DTS:TextQualified="True"
              DTS:ObjectName="deliveryspec"
              DTS:DTSID="{65DE2CC9-D760-4A87-BBFF-A7B97D5295F0}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="User::InterfaceName"
      DTS:ConfigurationVariable="\Package.Variables[User::InterfaceName].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{9EF1D848-FE24-48AC-9459-434F7E322130}"
      DTS:ObjectName="InterfaceName" />
    <DTS:Configuration
      DTS:ConfigurationString="ConfigConnectionString"
      DTS:ConfigurationVariable="\Package.Variables[User::ConfigConnectionString].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{D63A20C9-AC2D-4831-BD50-D4C3DC710239}"
      DTS:ObjectName="ConfigConnectionString" />
    <DTS:Configuration
      DTS:ConfigurationString="AuditConnectionString"
      DTS:ConfigurationVariable="\Package.Variables[User::AuditConnectionString].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{8222AFAA-4C0C-4B9B-B6B2-1DC5CEC88EF7}"
      DTS:ObjectName="AuditConnectionString" />
    <DTS:Configuration
      DTS:ConfigurationString="InvoiceConnectionString"
      DTS:ConfigurationVariable="\Package.Variables[User::InvoiceFulfilmentConnectionString].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{4517ED38-C27A-49FB-B01D-A5FBA080CA20}"
      DTS:ObjectName="InvoiceConnectionString" />
    <DTS:Configuration
      DTS:ConfigurationString="User::workingFolder"
      DTS:ConfigurationVariable="\Package.Variables[User::WorkingFolder].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{C84BA2A0-998A-44F2-B6DE-C70F5D17DF62}"
      DTS:ObjectName="WorkingFolder" />
    <DTS:Configuration
      DTS:ConfigurationString="User::InterfaceID"
      DTS:ConfigurationVariable="\Package.Variables[User::InterfaceId].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{2301DC73-FAA2-4559-8F29-1FE1FD8EF3A1}"
      DTS:ObjectName="InterfaceID" />
    <DTS:Configuration
      DTS:ConfigurationString="User::interfaceInstanceID"
      DTS:ConfigurationVariable="\Package.Variables[User::InterfaceInstanceId].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{D6A68B95-25E6-42AE-8BEE-92F92CD3158B}"
      DTS:ObjectName="interfaceInstanceID" />
    <DTS:Configuration
      DTS:ConfigurationString="FBP_CONFIGURATIONPATH"
      DTS:ConfigurationType="5"
      DTS:CreationName=""
      DTS:DTSID="{1C215E69-F82C-4CDF-A36F-9E52ECAEA3C4}"
      DTS:ObjectName="FbpFrameworkConfiguration" />
    <DTS:Configuration
      DTS:ConfigurationString="&quot;FbpFrameworkDb&quot;;&quot;[dbo].[SSIS Configurations]&quot;;&quot;Trn.K05.EDI.UBLDATAONLY&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{4E5558D2-A1B4-47FD-A508-4918C25EC04E}"
      DTS:ObjectName="ssis config" />
  </DTS:Configurations>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="FbpFrameworkDb"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{F6767D84-2965-4518-8B68-2A85729B7BA8}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FF8BBF5E-75FA-4F6E-B287-18A81F16EC60}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ATOSColcoid">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4EF4B41D-19EB-4E4E-8A23-171FE18AD12B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AuditConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=devapp-02-amb-mi.c36d19284d11.database.windows.net;User ID=SQLAdmin;Password=M!cr0Serv!ce12345;Initial Catalog=FbpFrameworkDb;Persist Security Info=True;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C56C1EE-1F60-4841-8BD4-6F6BEEEFAD18}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConfigConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=devapp-02-amb-mi.c36d19284d11.database.windows.net;User ID=sqladmin;Password=M!cr0Serv!ce12345;Initial Catalog=FbpFrameworkDb;Persist Security Info=True;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{77C7BAB2-1064-4299-B6D7-6B5DE3393962}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CountryCode">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F70EAABA-CD53-4BF9-84DF-A10D787929B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CountrySuffix">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6802643A-E607-4FBD-987E-4E9F66D2B230}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationManifestFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\YASWANTH\EDIDataOnly</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CE652B6-1DEA-4188-854A-6DC4E6FB3068}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EIDInterfaceId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AE37CCA-A071-43EB-B7F7-FD175BD8F490}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Environment">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{148A00BD-81F8-42D5-8929-B7B998F28195}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileCountryCode">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9FFA3D1E-0585-463E-B964-F2F539B1323C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileFormatPeppoIDataOnly">
      <DTS:VariableValue
        DTS:DataType="8">EDI.PEPPOL.UBL_DATAONLY</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC031FD5-21FC-4ED2-8B55-228576200BEF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FlagZIP">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CF41754-126D-4586-93C4-D1EFBB8263B2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FrameworkConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=devapp-02-amb-mi.c36d19284d11.database.windows.net;User ID=SQLAdmin;Password=M!cr0Serv!ce12345;Initial Catalog=FbpFrameworkDb;Provider=MSOLEDBSQL.1;Persist Security Info=True;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2AFD850-AC9A-4523-B61D-FD0B0F3BC523}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InterfaceId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3F072337-2E31-4101-8141-44F35B4DF6A1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InterfaceInstanceId">
      <DTS:VariableValue
        DTS:DataType="8">e6bc9b90-960d-4155-bdb6-a958a68bbad5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33FE8C9D-BDFC-45EB-8D6F-63ACF4AEB161}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InterfaceName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C80CE3F-1C18-44AD-A96F-9A1F2BAC002E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InvoiceFulfilmentConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=devapp-02-amb-mi.c36d19284d11.database.windows.net;Initial Catalog=InvoiceFulfilment_{0};Provider=SQLNCLI11.1;Integrated Security=SSPI;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8E09DEBF-8170-4FBD-BBEC-79D4D65E4A07}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InvoiceFulfilmentInterfaceInstanceId">
      <DTS:VariableValue
        DTS:DataType="8">04A7FD9D-9AC3-4D78-9B6F-4AD41A1FB51D</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B1BFEF62-DD74-461E-A8ED-3AB3882AF9B9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IsColcoOverride">
      <DTS:VariableValue
        DTS:DataType="8">N</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D06F831A-EB43-4186-B068-225E08F5CD43}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ManifestXMLEncoding">
      <DTS:VariableValue
        DTS:DataType="8">UTF-8</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17E99FFC-4968-4D3E-AAFF-0D3080BD7101}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE898B7F-62C3-4103-931C-A6DE1D3A60D4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OutputPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\YASWANTH\EDIDataOnly\OUTPUT</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D24CB404-5ED6-4336-8B82-8D267118920F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageIFDelete">
      <DTS:VariableValue
        DTS:DataType="8">\\devapp02ipstgpne.file.core.windows.net\fs-ip-bin\ssis\Invoices\Trn.K05.IF.Delete.dtsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5595002E-B090-4306-A365-D26D6E5CDDB1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ParmGetInterfaceId">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{744B42C0-1236-4110-AF5D-49A5CC6CFA6D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessFormat">
      <DTS:VariableValue
        DTS:DataType="8">EDI.DATAONLY</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0C048DF-6213-4EC2-B8D3-617AD7ED01D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RGCountPeppolDataOnly">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4582386F-7F87-42F9-AB10-DF1374620CF4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sourcePathManifestFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\YASWANTH\EDIDataOnly\0A8E96F2-32A7-458C-A6BB-F1F01CD39BF9_014_000_EID.trg</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FFB4CAA7-0075-4DCC-82DD-6E11F0EAA516}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="WorkingFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\YASWANTH\EDIDataOnly</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0BE2BBD8-7118-482D-954C-12CD971147EA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ZipFileLimit">
      <DTS:VariableValue
        DTS:DataType="3">1000</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0E8E84F-0C6C-4C5A-AA25-CBC8818764E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ZipPrefix">
      <DTS:VariableValue
        DTS:DataType="8">H3E</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete EDIUBL2_DATAONLYFormatData"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7C8F4052-B7C5-4845-922B-C9E41059FEFE}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete EDIUBL2_DATAONLYFormatData"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CC45E353-B43D-402B-BA97-86B2FCC5941E}"
          SQLTask:SqlStatementSource="DELETE FROM EDIUBL2_DATAONLYFormatData where InterfaceInstanceID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::InvoiceFulfilmentInterfaceInstanceId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\EPT - Call IF Delete Package"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{A9E05797-F94F-43FB-AB99-A44807334190}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="EPT - Call IF Delete Package"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ExecutePackageTask>
          <Connection>{186D8925-5352-4A00-882D-39DD3DF06D68}</Connection>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Get ATOS ColcoId"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B7105A6D-F1C0-4D8F-A549-CBA89FA09102}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Get ATOS ColcoId"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CC45E353-B43D-402B-BA97-86B2FCC5941E}"
          SQLTask:SqlStatementSource="SELECT TOP 1 shell_colco_code&#xA;FROM [dbo].[TrnK05_CRM_H3_Colco]&#xA;WHERE GFN_colco_shell_id = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ATOSColcoid" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::CountryCode"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SCR - Log Package Completion Message"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{505EC10D-4FED-4A44-B9F3-FF32ABA4E37B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SCR - Log Package Completion Message"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_16b2b5908e964923ab7549fa875eafcc"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::AuditConnectionString,User::InterfaceInstanceId,User::InterfaceName,System::PackageName,User::RGCountPeppolDataOnly">
          <ProjectItem
            Name="ST_16b2b5908e964923ab7549fa875eafcc.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{10AF2454-7AF0-413F-80D3-2625C7DD6406}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_16b2b5908e964923ab7549fa875eafcc</RootNamespace>
    <AssemblyName>ST_16b2b5908e964923ab7549fa875eafcc</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="LogicaCards.IntPlat.Common.Audit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f8c9342ba49e22f8, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\LogicaCards.IntPlat.Common.Audit\v4.0_1.0.0.0__f8c9342ba49e22f8\LogicaCards.IntPlat.Common.Audit.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using LogicaCards.IntPlat.Common.Audit;
using LogicaCards.IntPlat.Common.Audit.Entities;
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Windows.Forms;
#endregion

namespace ST_16b2b5908e964923ab7549fa875eafcc
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            int rGCount = Convert.ToInt32(Dts.Variables["User::RGCountPeppolDataOnly"].Value);

            string fileCount = rGCount.ToString();
            string connectionString = Dts.Variables["User::AuditConnectionString"].Value.ToString();
            Dictionary<string, object> dictionary = new Dictionary<string, object>();
            dictionary.Add("EDI File Count", fileCount);
            LogAuditMessage(string.Format("EDI format files generated.", fileCount), dictionary);

            LogAuditMessage("The Package '" + Dts.Variables["System::PackageName"].Value.ToString() + "' executed successfully.", null);
            Dts.TaskResult = (int)ScriptResults.Success;

		}

        void LogAuditMessage(string message, Dictionary<string, object> dictionary)
        {
            string connectionString = Dts.Variables["User::AuditConnectionString"].Value.ToString();

            MessageWriter _messageWriter = new MessageWriter(connectionString);

            _messageWriter.WriteAudit(ApplicationName.IntegrationPlatform,
                this.Dts.Variables["User::InterfaceName"].Value.ToString(),
                this.Dts.Variables["User::InterfaceInstanceId"].Value.ToString(),
                message,
                null,
                null,
                DateTime.UtcNow,
                dictionary);

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_16b2b5908e964923ab7549fa875eafcc</msb:CodeName>
    <msb:DisplayName>ST_16b2b5908e964923ab7549fa875eafcc</msb:DisplayName>
    <msb:ProjectId>{1BC1E412-0995-4F16-916D-516C108F8E58}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_16b2b5908e964923ab7549fa875eafcc.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16b2b5908e964923ab7549fa875eafcc.Properties.Settings.get_Default():ST_16b2b5908e964923ab7549fa875eafcc.Properties.Sett" +
    "ings")]

namespace ST_16b2b5908e964923ab7549fa875eafcc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_16b2b5908e964923ab7549fa875eafcc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("CGI")]
[assembly: AssemblyProduct("ST_16b2b5908e964923ab7549fa875eafcc")]
[assembly: AssemblyCopyright("Copyright @ CGI 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16b2b5908e964923ab7549fa875eafcc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16b2b5908e964923ab7549fa875eafcc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_16b2b5908e964923ab7549fa875eafcc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_16b2b5908e964923ab7549fa875eafcc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_16b2b5908e964923ab7549fa875eafcc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_16b2b5908e964923ab7549fa875eafcc.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOz9fGgAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAHjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwxAABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MgAAAAAAAEgAAAACAAUACCIAAAwPAAABAAAAAAAAABQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBACuAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKKBQAAAoKEgAoFQAACgsCKBAAAApvEQAACnI5AABwbxIAAApvEwAACm8WAAAKJnMXAAAKDAhy
cQAAcAdvGAAACgJyjwAAcAcoGQAACggoAgAABgJyxwAAcAIoEAAACm8RAAAKcuMAAHBvEgAACm8T
AAAKbxYAAApyCwEAcCgaAAAKFCgCAAAGAigQAAAKFm8bAAAKKgAAEzAJAIcAAAAAAAAAAigQAAAK
bxEAAApyOQAAcG8SAAAKbxMAAApvFgAACnMcAAAKcj0BAHACKBAAAApvEQAACnJnAQBwbxIAAApv
EwAACm8WAAAKAigQAAAKbxEAAApyjwEAcG8SAAAKbxMAAApvFgAACgMUFCgdAAAKcx4AAAoEbx8A
AAoCKBAAAAoWbxsAAAoqHgIoIAAACioeAighAAAKKq5+AQAABC0ecsMBAHDQAwAAAigiAAAKbyMA
AApzJAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCUAAAoqLnMJAAAGgAMA
AAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAWAQAACN+AADEBAAAJAYA
ACNTdHJpbmdzAAAAAOgKAAA4AgAAI1VTACANAAAQAAAAI0dVSUQAAAAwDQAA3AEAACNCbG9iAAAA
AAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAACQAAAAFAAAABgAAAAoAAAADAAAAJQAAAAIAAAAQ
AAAAAQAAAAIAAAADAAAABAAAAAIAAAABAAAABQAAAAEAAAABAAAAAADVAwEAAAAAAAYAhQKzBAYA
FAOzBAYA0QGgBA8AJwUAAAYA/gFTBAYAaAJTBAYASQJTBAYA+wJTBAYApQJTBAYAvgJTBAYAFQJT
BAYAMAJCAwoA2QKEAwoAUAGEAwYAFAB+AAYAqAUGBAYADQQGBAYAtAGgBAYAdQTTBAYAZQQ+BA4A
hAG/Aw4A5QG/Aw4AbAEpBAYAmQGzBAoArQOEAxIAaQX7ABIAxQD7AAYA9gUGBAYADgAGBAYAXgMG
BBYAhQSvBQYA8gAGBAYAAQAGBAYAGwEGBAYAzgAGBAYADQZTBAAAAAAhAAAAAAABAAEAAQAQAB4E
WgA5AAEAAQAAABAA2gQ2BUEAAQAEAAABEABzBTYFXQADAAgAAwEAAIwFAABFAAQACwARABIEyQAR
AEABzQARAJ0A0QAGBkkA1QBWgHwF2ABWgCAB2ABQIAAAAACGACQEBgABAAwhAAAAAIEArQDcAAEA
nyEAAAAAhhiTBAYAAwCnIQAAAACDGJMEBgADAK8hAAAAAJMIcQTnAAMA2yEAAAAAkwgoAewAAwDi
IQAAAACTCDQB8QADAOohAAAAAJYI2wX3AAQA8SEAAAAAhhiTBAYABAD5IQAAAACRGJkE/AAEAAAA
AQC9AAAAAgAWBgAAAQA8AwkAkwQBABEAkwQGABkAkwQKACkAkwQQADEAkwQQADkAkwQQAEEAkwQQ
AEkAkwQQAFEAkwQQAFkAkwQQAGEAkwQQAGkAkwQGAJEAkwQGALEAkwQVAMEAkwQGAHEAhAUmAMkA
ZQUrANEA/QMwANkAMgM2AOEADAA6AOkAXAM/AIEAXAM/AAwAkwQGAAwAmQBKAPEAoQVSAPEAmgVY
AMkA5wUBAPkAkwQQAAEB/gVfABQAkwRuAPkA0AV0AHEAkwQGAIEAkwQGABEB4ACNABEBCQaWAJkA
kwScALkAkwQGAAgAFAC/AAgAGADEACkAcwA3AS4ACwAPAS4AEwAYAS4AGwA3AS4AIwBAAS4AKwBp
AS4AMwBpAS4AOwBvAS4AQwBAAS4ASwB4AS4AUwBpAS4AWwCSAUMAYwDEAEkAcwA3AWEAewDEAGMA
awDEABsAAwABAAQAAwAAAHUEAAEAAEgBBQEAAN8FCgECAAUAAwACAAYABQABAAcABQACAAgABwBD
AGUABIAAAAEAAAB0JD5tAAAAAAAAWgAAAAQAAAAAAAAAAAAAAKQAUQAAAAAADgAAAAAAAAAAAAAA
rQBlAwAAAAAEAAAAAAAAAAAAAACkAAYEAAAAAA4AAAAAAAAAAAAAAK0AKgAAAAAAAQAAAAAAAAAA
AAAAtgCvBQAAAAAAAAAAAQAAAOQEAAAFAAIAAAAATnVsbGFibGVgMQBUb0ludDMyAERpY3Rpb25h
cnlgMgA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2Nv
cmxpYgBTVF8xNmIyYjU5MDhlOTY0OTIzYWI3NTQ5ZmE4NzVlYWZjYwBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBBZGQAZGVmYXVsdEluc3RhbmNlAExvZ0F1ZGl0TWVzc2FnZQBtZXNzYWdlAFZh
cmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8xNmIyYjU5MDhlOTY0
OTIzYWI3NTQ5ZmE4NzVlYWZjYy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAE1lc3NhZ2VXcml0
ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMTZiMmI1OTA4ZTk2NDkyM2FiNzU0OWZhODc1
ZWFmY2MuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzE2
YjJiNTkwOGU5NjQ5MjNhYjc1NDlmYTg3NWVhZmNjLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBT
ZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBDb25jYXQARm9ybWF0AE9iamVj
dABMb2dpY2FDYXJkcy5JbnRQbGF0LkNvbW1vbi5BdWRpdABXcml0ZUF1ZGl0AGdldF9EZWZhdWx0
AHNldF9UYXNrUmVzdWx0AENvbnZlcnQAZ2V0X1V0Y05vdwBnZXRfQXNzZW1ibHkAZGljdGlvbmFy
eQAAAAAAN1UAcwBlAHIAOgA6AFIARwBDAG8AdQBuAHQAUABlAHAAcABvAGwARABhAHQAYQBPAG4A
bAB5AAA3VQBzAGUAcgA6ADoAQQB1AGQAaQB0AEMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBu
AGcAAB1FAEQASQAgAEYAaQBsAGUAIABDAG8AdQBuAHQAADdFAEQASQAgAGYAbwByAG0AYQB0ACAA
ZgBpAGwAZQBzACAAZwBlAG4AZQByAGEAdABlAGQALgAAG1QAaABlACAAUABhAGMAawBhAGcAZQAg
ACcAASdTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEAbQBlAAAxJwAgAGUAeABlAGMA
dQB0AGUAZAAgAHMAdQBjAGMAZQBzAHMAZgB1AGwAbAB5AC4AASlJAG4AdABlAGcAcgBhAHQAaQBv
AG4AIABQAGwAYQB0AGYAbwByAG0AACdVAHMAZQByADoAOgBJAG4AdABlAHIAZgBhAGMAZQBOAGEA
bQBlAAAzVQBzAGUAcgA6ADoASQBuAHQAZQByAGYAYQBjAGUASQBuAHMAdABhAG4AYwBlAEkAZAAA
cVMAVABfADEANgBiADIAYgA1ADkAMAA4AGUAOQA2ADQAOQAyADMAYQBiADcANQA0ADkAZgBhADgA
NwA1AGUAYQBmAGMAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
AAAAGSRZIu7SjEO3BP1WqyUjbAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERVQoHAwgOFRI9Ag4c
BCAAEmUEIAASaQUgARJtHAMgABwEAAEIHAMgAA4GFRI9Ag4cByACARMAEwEFAAIODhwGAAMODg4O
BQAAEYCBCBURgIUBEYCBBSABARMAGCAIAQ4ODg4cHQUVEYCFARGAgRUSPQIOHAgAARKAiRGAjQUg
ABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRCPjJNCukniL4BAAAAAAEAQAAAAMGEk0DBhJR
AwYSEAIGCAMGERQKIAIBDhUSPQIOHAQAABJNBAAAElEFAAEBElEEAAASEAMAAAEECAASTQQIABJR
BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUXzE2YjJiNTkwOGU5NjQ5MjNhYjc1NDlmYTg3NWVhZmNjAAAFAQAAAAAIAQADQ0dJAAAZAQAU
Q29weXJpZ2h0IEAgQ0dJIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuOAEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC44tAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAPQxAAAA
AAAAAAAAAA4yAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAmBAAAAAAAAAAAAAAmBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAPm10JAAAAQA+bXQkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEhgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAYgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACgABAABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAQwBHAEkAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBUAF8AMQA2AGIAMgBiADUAOQAwADgAZQA5ADYANAA5ADIAMwBhAGIANwA1ADQAOQBm
AGEAOAA3ADUAZQBhAGYAYwBjAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADkAMwAzADIALgAyADcAOQA2ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBUAF8AMQA2AGIAMgBiADUAOQAwADgAZQA5ADYANAA5ADIAMwBhAGIANwA1ADQAOQBmAGEA
OAA3ADUAZQBhAGYAYwBjAC4AZABsAGwAAABOABUAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABDAEcASQAgADIAMAAyADUAAAAAACoAAQABAEwA
ZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBs
AEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfADEANgBiADIAYgA1ADkAMAA4AGUAOQA2ADQAOQAyADMA
YQBiADcANQA0ADkAZgBhADgANwA1AGUAYQBmAGMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1
AGMAdABOAGEAbQBlAAAAAABTAFQAXwAxADYAYgAyAGIANQA5ADAAOABlADkANgA0ADkAMgAzAGEA
YgA3ADUANAA5AGYAYQA4ADcANQBlAGEAZgBjAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADkAMwAzADIALgAyADcAOQA2ADYAAAAAAEYADwABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMwAzADIALgAyADcAOQA2ADYAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAIDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SCR Construct InvoiceFulFilment Connection String"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{331C5918-8003-47A1-84D3-EAD5A71F2B63}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SCR Construct InvoiceFulFilment Connection String"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5fffb4ecc2364119b0e1ec1eab4919e7"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::CountrySuffix"
          ReadWriteVariables="User::InvoiceFulfilmentConnectionString,User::ParmGetInterfaceId">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_5fffb4ecc2364119b0e1ec1eab4919e7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{99E0BF42-CC4D-4420-AF19-081369A22004}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5fffb4ecc2364119b0e1ec1eab4919e7</RootNamespace>
    <AssemblyName>ST_5fffb4ecc2364119b0e1ec1eab4919e7</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5fffb4ecc2364119b0e1ec1eab4919e7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string invoiceFulfilmentConnectionString = Dts.Variables["User::InvoiceFulfilmentConnectionString"].Value.ToString();

            string countrySuffix = Dts.Variables["User::CountrySuffix"].Value.ToString();
            Dts.Variables["User::InvoiceFulfilmentConnectionString"].Value = string.Format(invoiceFulfilmentConnectionString, countrySuffix);

            Dts.Variables["User::ParmGetInterfaceId"].Value = "K05." + countrySuffix + ".003 - IFX Base EID to ATOS";
            

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5fffb4ecc2364119b0e1ec1eab4919e7</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5fffb4ecc2364119b0e1ec1eab4919e7</msb:DisplayName>
    <msb:ProjectId>{707E83AE-FB22-49D6-B561-8495E73F224C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5fffb4ecc2364119b0e1ec1eab4919e7.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties.Settings.get_Default():ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties.Sett" +
    "ings")]

namespace ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5fffb4ecc2364119b0e1ec1eab4919e7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("CGI")]
[assembly: AssemblyProduct("ST_5fffb4ecc2364119b0e1ec1eab4919e7")]
[assembly: AssemblyCopyright("Copyright @ CGI 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5fffb4ecc2364119b0e1ec1eab4919e7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5fffb4ecc2364119b0e1ec1eab4919e7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACmfcmgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAADi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALwuAABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
LgAAAAAAAEgAAAACAAUAXCEAAKgMAAABAAAAAAAAAAQuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBACYAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyUQAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnIBAABw
bxIAAAoGBygVAAAKbxYAAAoCKBAAAApvEQAACnJ5AABwbxIAAApyqwAAcAdytQAAcCgXAAAKbxYA
AAoCKBAAAAoWbxgAAAoqHgIoGQAACioeAigaAAAKKq5+AQAABC0ecu0AAHDQAwAAAigbAAAKbxwA
AApzHQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB4AAAoqLnMIAAAGgAMA
AAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADUAwAAI34AAEAEAAB0BQAA
I1N0cmluZ3MAAAAAtAkAAGABAAAjVVMAFAsAABAAAAAjR1VJRAAAACQLAACEAQAAI0Jsb2IAAAAA
AAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAHgAAAAUAAAAGAAAACQAAAAEAAAAeAAAAAgAAABAA
AAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAfwMBAAAAAAAGACUCTwQGALQCTwQG
AHEBPAQPAMMEAAAGAJ4B/QMGAAgC/QMGAOkB/QMGAJsC/QMGAEUC/QMGAF4C/QMGALUB/QMGANAB
7AIKAHkCLgMKAPAALgMGALcDsAMGAFQBPAQGAEQFsAMGAB8EbwQGAA8E6AMOACQBaQMOAIUBaQMO
AAwB0wMGADkBTwQKAFcDLgMSAAUFmwASAG4AmwAGAAgDsAMGALsAsAMGAHcAsAMGAGoF/QMAAAAA
JQAAAAAAAQABAAEAEADIAwEAOQABAAEAAAAQAHYE0gRFAAEAAwAAARAADwXSBFkAAwAHAAMBAAAo
BQAAPQAEAAoAEQC8A3kAEQDgAH0AEQBeAIEABgZNAIUAVoAYBYgAVoDAAIgAUCAAAAAAhgDOAwYA
AQD0IAAAAACGGC8EBgABAPwgAAAAAIMYLwQGAAEABCEAAAAAkwgbBIwAAQAwIQAAAACTCMgAkQAB
ADchAAAAAJMI1ACWAAEAPyEAAAAAlghLBZwAAgBGIQAAAACGGC8EBgACAE4hAAAAAJEYNQShAAIA
AAABAOYCCQAvBAEAEQAvBAYAGQAvBAoAKQAvBBAAMQAvBBAAOQAvBBAAQQAvBBAASQAvBBAAUQAv
BBAAWQAvBBAAYQAvBBAAaQAvBAYAgQAvBAYAqQAvBBUAuQAvBAYAcQAgBSAAwQABBSUAyQCnAyoA
0QDSAjAAiQAGAzQA2QA9BTgA0QDcAj4A2QA2BUMAwQBXBQEAcQAvBAYAiQAvBAYA4QCJAEoA4QBm
BVEAkQAvBFYAsQAvBAYACAAUAG8ACAAYAHQAKQBzANwALgALALQALgATAL0ALgAbANwALgAjAOUA
LgArAA4BLgAzAA4BLgA7ABQBLgBDAOUALgBLAB0BLgBTAA4BLgBbADcBQwBjAHQASQBzANwAYQB7
AHQAYwBrAHQAGwADAAEABAADAAAAHwSlAAAA6ACqAAAATwWvAAIABAADAAIABQAFAAEABgAFAAIA
BwAHAASAAAABAAAAbCTcgwAAAAAAAAEAAAAEAAAAAAAAAAAAAABdAFUAAAAAAA4AAAAAAAAAAAAA
AGYADwMAAAAABAAAAAAAAAAAAAAAXQCwAwAAAAAOAAAAAAAAAAAAAABmAC4AAAAAAAAAAAABAAAA
gAQAAAUAAgAAAABTVF81ZmZmYjRlY2MyMzY0MTE5YjBlMWVjMWVhYjQ5MTllNwA8TW9kdWxlPgBN
aWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5z
dGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJs
eUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVl
AHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81ZmZm
YjRlY2MyMzY0MTE5YjBlMWVjMWVhYjQ5MTllNy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzVmZmZiNGVjYzIzNjQxMTliMGUxZWMxZWFiNDkxOWU3
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF81ZmZmYjRl
Y2MyMzY0MTE5YjBlMWVjMWVhYjQ5MTllNy5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGlu
Z3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29uY2F0AEZvcm1hdABPYmplY3QAZ2V0
X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAAT1UAcwBlAHIAOgA6AEkAbgB2
AG8AaQBjAGUARgB1AGwAZgBpAGwAbQBlAG4AdABDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkA
bgBnAAAnVQBzAGUAcgA6ADoAQwBvAHUAbgB0AHIAeQBTAHUAZgBmAGkAeAAAMVUAcwBlAHIAOgA6
AFAAYQByAG0ARwBlAHQASQBuAHQAZQByAGYAYQBjAGUASQBkAAAJSwAwADUALgAANy4AMAAwADMA
IAAtACAASQBGAFgAIABCAGEAcwBlACAARQBJAEQAIAB0AG8AIABBAFQATwBTAAFxUwBUAF8ANQBm
AGYAZgBiADQAZQBjAGMAMgAzADYANAAxADEAOQBiADAAZQAxAGUAYwAxAGUAYQBiADQAOQAxADkA
ZQA3AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAsVWcKMNqqkOi
2gjs5OOw6gAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERUQQHAg4OBCAAEmEEIAASZQUgARJpHAMg
ABwDIAAOBQACDg4cBCABARwGAAMODg4OBgABEnERdQQgABJ5BiACAQ4SeQi3elxWGTTgiQiJhF3N
gIDMkQQAAAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAA
AQQIABJJBAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU1RfNWZmZmI0ZWNjMjM2NDExOWIwZTFlYzFlYWI0OTE5ZTcAAAUBAAAAAAgB
AANDR0kAABkBABRDb3B5cmlnaHQgQCBDR0kgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC44AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjgAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAA5C4AAAAAAAAAAAAA/i4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAuAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACYEAAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDcg2wkAAABANyDbCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASGAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABDAEcASQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwA1AGYAZgBmAGIANABlAGMAYwAyADMANgA0ADEAMQA5AGIAMABlADEAZQBj
ADEAZQBhAGIANAA5ADEAOQBlADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAzADIANAAuADMAMwA3ADUANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwA1AGYAZgBmAGIANABlAGMAYwAyADMANgA0ADEAMQA5AGIAMABlADEAZQBjADEA
ZQBhAGIANAA5ADEAOQBlADcALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEMARwBJACAAMgAwADIANQAAAAAAKgABAAEA
TABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANQBmAGYAZgBiADQAZQBjAGMAMgAzADYANAAxADEA
OQBiADAAZQAxAGUAYwAxAGUAYQBiADQAOQAxADkAZQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBk
AHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADUAZgBmAGYAYgA0AGUAYwBjADIAMwA2ADQAMQAxADkA
YgAwAGUAMQBlAGMAMQBlAGEAYgA0ADkAMQA5AGUANwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAzADIANAAuADMAMwA3ADUANgAAAAAARgAPAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAzADIANAAuADMAMwA3ADUANgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAQPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Obtain the parentInterfaceInstanceId"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{538A0BEC-9522-4D71-9D17-CC9525C7E08B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Obtain the parentInterfaceInstanceId"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5843272ba38944ed827c3832f9aa87e2"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::AuditConnectionString,User::InvoiceFulfilmentConnectionString,User::sourcePathManifestFile"
          ReadWriteVariables="User::CountryCode,User::DestinationManifestFilePath,User::FileCountryCode,User::InvoiceFulfilmentInterfaceInstanceId,User::WorkingFolder">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_5843272ba38944ed827c3832f9aa87e2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string sourceFileManifestFile = Dts.Variables["User::sourcePathManifestFile"].Value.ToString();
            string[] InitialSplit = sourceFileManifestFile.Split('\\');
            string LastItem = InitialSplit[InitialSplit.Length - 1];
            string[] InvoiceFulfilmentInterfaceinstanceid = LastItem.Split('_');
            Dts.Variables["User::InvoiceFulfilmentInterfaceInstanceId"].Value = InvoiceFulfilmentInterfaceinstanceid[0];
            Dts.Variables["User::CountryCode"].Value = Convert.ToInt32(InvoiceFulfilmentInterfaceinstanceid[1]);
            Dts.Variables["User::FileCountryCode"].Value = Convert.ToInt32(InvoiceFulfilmentInterfaceinstanceid[1]);
            string workingfolder = Path.GetDirectoryName(sourceFileManifestFile);

            string DestinationManifestFilePath = Path.Combine(workingfolder, "EDIPEPOLDATAONLY");
            if (!Directory.Exists(DestinationManifestFilePath))
            {
                Directory.CreateDirectory(DestinationManifestFilePath);
            }
            Dts.Variables["User::WorkingFolder"].Value = workingfolder;
            Dts.Variables["User::DestinationManifestFilePath"].Value = DestinationManifestFilePath;
            string connectionString = Dts.Variables["User::AuditConnectionString"].Value.ToString();

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_5843272ba38944ed827c3832f9aa87e2.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3C3E5D78-65E8-4522-97DE-946EBD46A6FB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5843272ba38944ed827c3832f9aa87e2</RootNamespace>
    <AssemblyName>ST_5843272ba38944ed827c3832f9aa87e2</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5843272ba38944ed827c3832f9aa87e2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5843272ba38944ed827c3832f9aa87e2</msb:DisplayName>
    <msb:ProjectId>{521CDFFA-AB7E-47F5-B8C3-F3D654152D61}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5843272ba38944ed827c3832f9aa87e2.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5843272ba38944ed827c3832f9aa87e2.Properties.Settings.get_Default():ST_5843272ba38944ed827c3832f9aa87e2.Properties.Sett" +
    "ings")]

namespace ST_5843272ba38944ed827c3832f9aa87e2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5843272ba38944ed827c3832f9aa87e2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("CGI")]
[assembly: AssemblyProduct("ST_5843272ba38944ed827c3832f9aa87e2")]
[assembly: AssemblyCopyright("Copyright @ CGI 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5843272ba38944ed827c3832f9aa87e2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5843272ba38944ed827c3832f9aa87e2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5843272ba38944ed827c3832f9aa87e2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5843272ba38944ed827c3832f9aa87e2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5843272ba38944ed827c3832f9aa87e2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5843272ba38944ed827c3832f9aa87e2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM/8fGgAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAHjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMwwAABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
MQAAAAAAAEgAAAACAAUA/CEAABgOAAABAAAAAAAAABQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQA4AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKBheNGwAAASUWH1ydbxUAAAoljmkXWZoXjRsAAAElFh9fnW8VAAAKCwIoEAAACm8R
AAAKcjsAAHBvEgAACgcWmm8WAAAKAigQAAAKbxEAAApykQAAcG8SAAAKBxeaKBcAAAqMHgAAAW8W
AAAKAigQAAAKbxEAAApytQAAcG8SAAAKBxeaKBcAAAqMHgAAAW8WAAAKBigYAAAKDAhy4QAAcCgZ
AAAKDQkoGgAACi0HCSgbAAAKJgIoEAAACm8RAAAKcgMBAHBvEgAACghvFgAACgIoEAAACm8RAAAK
cisBAHBvEgAACglvFgAACgIoEAAACm8RAAAKcm8BAHBvEgAACm8TAAAKbxQAAAomAigQAAAKFm8c
AAAKKh4CKB0AAAoqHgIoHgAACiqufgEAAAQtHnKnAQBw0AMAAAIoHwAACm8gAAAKcyEAAAqAAQAA
BH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigiAAAKKi5zCAAABoADAAAEKgAAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAEAQAACN+AAB8BAAA0AUAACNTdHJpbmdzAAAA
AEwKAAAcAgAAI1VTAGgMAAAQAAAAI0dVSUQAAAB4DAAAoAEAACNCbG9iAAAAAAAAAAIAAAFXHaIB
CQMAAAD6ATMAFgAAAQAAACQAAAAFAAAABgAAAAkAAAABAAAAIgAAAAIAAAAQAAAAAQAAAAIAAAAD
AAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAK8DAQAAAAAABgBQApIEBgDfApIEBgCcAX8EDwAGBQAA
BgDJAS0EBgAzAi0EBgAUAi0EBgDGAi0EBgBwAi0EBgCJAi0EBgDgAS0EBgD7ARcDCgCkAl4DCgAb
AV4DBgDnA+ADBgB/AX8EBgCABeADBgBiBLIEBgA/BBgEDgBPAZkDDgCwAZkDDgA3AQMEBgBkAZIE
CgCHA14DEgBIBb4AEgCAAL4ABgBZBOADBgAzA+ADBgCoBeADBgADAOADBgA6AzYABgDDBTYABgBL
BDYABgDmAOADBgCJAOADBgC0BS0EAAAAAC0AAAAAAAEAAQABABAA+AMJADkAAQABAAAAEAC5BBUF
RQABAAMAAAEQAFIFFQVZAAMABwADAQAAawUAAD0ABAAKABEA7AOWABEACwGaABEAcACeAAYGXwCi
AFaAWwWlAFaA6wClAFAgAAAAAIYA/gMGAAEAlCEAAAAAhhhyBAYAAQCcIQAAAACDGHIEBgABAKQh
AAAAAJMIXgSpAAEA0CEAAAAAkwjzAK4AAQDXIQAAAACTCP8AswABAN8hAAAAAJYIjQW5AAIA5iEA
AAAAhhhyBAYAAgDuIQAAAACRGHgEvgACAAAAAQARAwkAcgQBABEAcgQGABkAcgQKACkAcgQQADEA
cgQQADkAcgQQAEEAcgQQAEkAcgQQAFEAcgQQAFkAcgQQAGEAcgQQAGkAcgQGAIEAcgQGAKkAcgQV
ALkAcgQGAHEAYwUjAMEARAUoAMkA1wMtANEA/QIzAIkAMQM3AOEAhwU7ANEABwNCAOkAAQBHAPkA
rQBMAPkA3gBRAAEBeQVXAAEBvQVcAMEAmQUBAHEAcgQGAIkAcgQGABEBmwBjABEBsAVsAJEAcgRy
ALEAcgQGAAgAFACMAAgAGACRACkAcwD5AC4ACwDRAC4AEwDaAC4AGwD5AC4AIwACAS4AKwArAS4A
MwArAS4AOwAxAS4AQwACAS4ASwA6AS4AUwArAS4AWwBUAUMAYwCRAEkAcwD5AGEAewCRAGMAawCR
ABsAAwABAAQAAwAAAGIEwgAAABMBxwAAAJEFzAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAA
AQAAAHQkr2wAAAAAAAAJAAAABAAAAAAAAAAAAAAAegBnAAAAAAAOAAAAAAAAAAAAAACDAD8DAAAA
AAQAAAAAAAAAAAAAAHoA4AMAAAAADgAAAAAAAAAAAAAAgwBAAAAAAAAAAAAAAQAAAMMEAAAFAAIA
AAAAVG9JbnQzMgBTVF81ODQzMjcyYmEzODk0NGVkODI3YzM4MzJmOWFhODdlMgA8TW9kdWxlPgBT
eXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIA
ZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEdldERpcmVjdG9yeU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21i
aW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
VlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNTg0MzI3MmJhMzg5NDRlZDgyN2Mz
ODMyZjlhYTg3ZTIuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AQ3VsdHVyZUluZm8ARGlyZWN0b3J5SW5mbwBDaGFyAGdldF9SZXNvdXJjZU1hbmFnZXIA
LmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNTg0MzI3MmJhMzg5NDRlZDgyN2MzODMyZjlhYTg3
ZTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzU4NDMy
NzJiYTM4OTQ0ZWQ4MjdjMzgzMmY5YWE4N2UyLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0
aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBFeGlzdHMAT2JqZWN0AFNwbGl0AGdl
dF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AENvbnZlcnQAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVj
dG9yeQAAAAAAOVUAcwBlAHIAOgA6AHMAbwB1AHIAYwBlAFAAYQB0AGgATQBhAG4AaQBmAGUAcwB0
AEYAaQBsAGUAAFVVAHMAZQByADoAOgBJAG4AdgBvAGkAYwBlAEYAdQBsAGYAaQBsAG0AZQBuAHQA
SQBuAHQAZQByAGYAYQBjAGUASQBuAHMAdABhAG4AYwBlAEkAZAAAI1UAcwBlAHIAOgA6AEMAbwB1
AG4AdAByAHkAQwBvAGQAZQAAK1UAcwBlAHIAOgA6AEYAaQBsAGUAQwBvAHUAbgB0AHIAeQBDAG8A
ZABlAAAhRQBEAEkAUABFAFAATwBMAEQAQQBUAEEATwBOAEwAWQAAJ1UAcwBlAHIAOgA6AFcAbwBy
AGsAaQBuAGcARgBvAGwAZABlAHIAAENVAHMAZQByADoAOgBEAGUAcwB0AGkAbgBhAHQAaQBvAG4A
TQBhAG4AaQBmAGUAcwB0AEYAaQBsAGUAUABhAHQAaAAAN1UAcwBlAHIAOgA6AEEAdQBkAGkAdABD
AG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAABxUwBUAF8ANQA4ADQAMwAyADcAMgBiAGEA
MwA4ADkANAA0AGUAZAA4ADIANwBjADMAOAAzADIAZgA5AGEAYQA4ADcAZQAyAC4AUAByAG8AcABl
AHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAAw4ABXEu30TbqjRVEbg25nAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFRBwcEDh0ODg4EIAASYQQgABJlBSABEmkcAyAAHAMgAA4GIAEd
Dh0DBCABARwEAAEIDgQAAQ4OBQACDg4OBAABAg4GAAESgIUOCAABEoCJEYCNBSAAEoCRByACAQ4S
gJEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQAABJJBAAA
Ek0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25F
eGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU4NDMyNzJiYTM4OTQ0ZWQ4MjdjMzgzMmY5
YWE4N2UyAAAFAQAAAAAIAQADQ0dJAAAZAQAUQ29weXJpZ2h0IEAgQ0dJIDIwMjUAAEkBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuOAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFt
ZXdvcmsgNC44AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA9DAAAAAAAAAAAAAADjEAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAJgQAAAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAK9sdCQAAAEAr2x0JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBIYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAEMARwBJAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBv
AG4AAAAAAFMAVABfADUAOAA0ADMAMgA3ADIAYgBhADMAOAA5ADQANABlAGQAOAAyADcAYwAzADgA
MwAyAGYAOQBhAGEAOAA3AGUAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu
ADAALgA5ADMAMwAyAC4AMgA3ADgAMgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAVABfADUAOAA0ADMAMgA3ADIAYgBhADMAOAA5ADQANABlAGQAOAAyADcAYwAzADgAMwAy
AGYAOQBhAGEAOAA3AGUAMgAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAQwBHAEkAIAAyADAAMgA1AAAAAAAqAAEAAQBM
AGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEA
bABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwA1ADgANAAzADIANwAyAGIAYQAzADgAOQA0ADQAZQBk
ADgAMgA3AGMAMwA4ADMAMgBmADkAYQBhADgANwBlADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQA
dQBjAHQATgBhAG0AZQAAAAAAUwBUAF8ANQA4ADQAMwAyADcAMgBiAGEAMwA4ADkANAA0AGUAZAA4
ADIANwBjADMAOAAzADIAZgA5AGEAYQA4ADcAZQAyAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADMAMwAyAC4AMgA3ADgAMgAzAAAAAABGAA8AAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADMAMwAyAC4AMgA3ADgAMgAzAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task Write Audit Package Initiated"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{3EC90DC8-3112-4853-8E21-DC8E1CE2C378}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task Write Audit Package Initiated"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_34f0f15edce64516af58fac3d76282c2"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::AuditConnectionString,User::InterfaceInstanceId,User::InterfaceName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_34f0f15edce64516af58fac3d76282c2.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{546CED34-0839-472E-BF53-FF2949EC1BB4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_34f0f15edce64516af58fac3d76282c2</RootNamespace>
    <AssemblyName>ST_34f0f15edce64516af58fac3d76282c2</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="LogicaCards.IntPlat.Common.Audit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f8c9342ba49e22f8, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\LogicaCards.IntPlat.Common.Audit\v4.0_1.0.0.0__f8c9342ba49e22f8\LogicaCards.IntPlat.Common.Audit.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using LogicaCards.IntPlat.Common.Audit;
using LogicaCards.IntPlat.Common.Audit.Entities;
#endregion

namespace ST_34f0f15edce64516af58fac3d76282c2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string auditConnectionString = Dts.Variables["User::AuditConnectionString"].Value.ToString();
            auditConnectionString = auditConnectionString.Replace("Provider=SQLNCLI11.1;", "").Replace("MSOLEDBSQL.1", ""); //remove provider keyword from string

            MessageWriter messageWriter = new MessageWriter(auditConnectionString.ToString());

            messageWriter.WriteAudit(ApplicationName.IntegrationPlatform,
                this.Dts.Variables["User::InterfaceName"].Value.ToString(),
                this.Dts.Variables["User::InterfaceInstanceId"].Value.ToString(),
                "The Package Trn.K05.EDI.UBLDATAONLY has been initiated.",
                null,
                null,
                DateTime.UtcNow,
                null);

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_34f0f15edce64516af58fac3d76282c2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_34f0f15edce64516af58fac3d76282c2</msb:DisplayName>
    <msb:ProjectId>{88BB065A-8247-41C4-8EDB-F5D550BA0172}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_34f0f15edce64516af58fac3d76282c2.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f0f15edce64516af58fac3d76282c2.Properties.Settings.get_Default():ST_34f0f15edce64516af58fac3d76282c2.Properties.Sett" +
    "ings")]

namespace ST_34f0f15edce64516af58fac3d76282c2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_34f0f15edce64516af58fac3d76282c2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("CGI")]
[assembly: AssemblyProduct("ST_34f0f15edce64516af58fac3d76282c2")]
[assembly: AssemblyCopyright("Copyright @ CGI 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f0f15edce64516af58fac3d76282c2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f0f15edce64516af58fac3d76282c2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_34f0f15edce64516af58fac3d76282c2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_34f0f15edce64516af58fac3d76282c2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_34f0f15edce64516af58fac3d76282c2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_34f0f15edce64516af58fac3d76282c2.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAD73c2gAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAejAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACgwAABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
MAAAAAAAAEgAAAACAAUAcCEAAAAOAAABAAAAAAAAAHAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwCQCuAAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyOQAAcHJlAABwbxUAAApyZwAAcHJlAABwbxUAAApvFAAACnMWAAAKcoEAAHACKBAA
AApvEQAACnKrAABwbxIAAApvEwAACm8UAAAKAigQAAAKbxEAAApy0wAAcG8SAAAKbxMAAApvFAAA
CnIHAQBwFBQoFwAACnMYAAAKFG8ZAAAKAigQAAAKFm8aAAAKKh4CKBsAAAoqHgIoHAAACiqufgEA
AAQtHnJ3AQBw0AMAAAIoHQAACm8eAAAKcx8AAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+
AwAABCoeAiggAAAKKi5zCAAABoADAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAAAwEAAAjfgAAeAQAAOQFAAAjU3RyaW5ncwAAAABcCgAA7AEAACNVUwBIDAAAEAAAACNHVUlE
AAAAWAwAAKgBAAAjQmxvYgAAAAAAAAACAAABVx2gCQkDAAAA+gEzABYAAAEAAAAiAAAABQAAAAYA
AAAJAAAAAQAAACAAAAACAAAAEAAAAAIAAAADAAAABAAAAAEAAAABAAAABQAAAAEAAAABAAAAAAC5
AwEAAAAAAAYAaQKXBAYA+AKXBAYAtQGEBA8ACwUAAAYA4gE3BAYATAI3BAYALQI3BAYA3wI3BAYA
iQI3BAYAogI3BAYA+QE3BAYAFAImAwoAvQJoAwoANAFoAwYA8QPqAwYAmAGEBAYAfgXqAwYAWQS3
BAYASQQiBA4AaAGjAw4AyQGjAw4AUAENBAYAfQGXBAoAkQNoAxIATQXfABIAqQDfAAYAQgPqAxYA
aQSFBQYA1gDqAwYAAQDqAwYADAB2AAYA/wDqAwYAsgDqAwYA2wU3BAAAAAA9AAAAAAABAAEAAQAQ
AAIEGQA5AAEAAQAAABAAvgQaBUUAAQADAAABEABXBRoFWQADAAcAAwEAAHAFAAA9AAQACgARAPYD
ngARACQBogARAJkApgAGBmUAqgBWgGAFrQBWgAQBrQBQIAAAAACGAAgEBgABAAohAAAAAIYYdwQG
AAEAEiEAAAAAgxh3BAYAAQAaIQAAAACTCFUEsQABAEYhAAAAAJMIDAG2AAEATSEAAAAAkwgYAbsA
AQBVIQAAAACWCLEFwQACAFwhAAAAAIYYdwQGAAIAZCEAAAAAkRh9BMYAAgAAAAEAIAMJAHcEAQAR
AHcEBgAZAHcECgApAHcEEAAxAHcEEAA5AHcEEABBAHcEEABJAHcEEABRAHcEEABZAHcEEABhAHcE
EABpAHcEBgCBAHcEBgCpAHcEFQC5AHcEBgBxAGgFGwDBAEkFIADJAOEDJQDRABYDKwCJAEADLwDZ
AJEAMwDhAHcEEADpAMwFOQAMAHcERQDhAKYFSwDBAL0FAQBxAHcEBgCJAHcEBgABAcQAYgABAdcF
awCRAHcEcQCxAHcEBgAIABQAlAAIABgAmQApAHMAAQEuAAsA2QAuABMA4gAuABsAAQEuACMACgEu
ACsAMwEuADMAMwEuADsAOQEuAEMACgEuAEsAQgEuAFMAMwEuAFsAXAFDAGMAmQBJAHMAAQFhAHsA
mQBjAGsAmQADAAEABAADAAAAWQTKAAAALAHPAAAAtQXUAAIABAADAAIABQAFAAEABgAFAAIABwAH
AD4ABIAAAAEAAABtJCeHAAAAAAAAGQAAAAQAAAAAAAAAAAAAAHkAbQAAAAAADgAAAAAAAAAAAAAA
ggBJAwAAAAAEAAAAAAAAAAAAAAB5AOoDAAAAAA4AAAAAAAAAAAAAAIIARgAAAAAAAQAAAAAAAAAA
AAAAiwCFBQAAAAAAAAAAAQAAAMgEAAAFAAIAAAAATnVsbGFibGVgMQBEaWN0aW9uYXJ5YDIAU1Rf
MzRmMGYxNWVkY2U2NDUxNmFmNThmYWMzZDc2MjgyYzIAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVy
aWMAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBU
eXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJh
bWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURl
c2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRU
YXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAFNUXzM0ZjBmMTVlZGNlNjQ1MTZhZjU4ZmFjM2Q3NjI4MmMyLmRsbABnZXRf
SXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdl
dF9SZXNvdXJjZU1hbmFnZXIATWVzc2FnZVdyaXRlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF8zNGYwZjE1ZWRjZTY0NTE2YWY1OGZhYzNkNzYyODJjMi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMzRmMGYxNWVkY2U2NDUxNmFmNThmYWMzZDc2Mjgy
YzIuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3Jp
cHRSZXN1bHRzAE9iamVjdABMb2dpY2FDYXJkcy5JbnRQbGF0LkNvbW1vbi5BdWRpdABXcml0ZUF1
ZGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9VdGNOb3cAZ2V0X0Fzc2VtYmx5AAA3
VQBzAGUAcgA6ADoAQQB1AGQAaQB0AEMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAACtQ
AHIAbwB2AGkAZABlAHIAPQBTAFEATABOAEMATABJADEAMQAuADEAOwAAAQAZTQBTAE8ATABFAEQA
QgBTAFEATAAuADEAAClJAG4AdABlAGcAcgBhAHQAaQBvAG4AIABQAGwAYQB0AGYAbwByAG0AACdV
AHMAZQByADoAOgBJAG4AdABlAHIAZgBhAGMAZQBOAGEAbQBlAAAzVQBzAGUAcgA6ADoASQBuAHQA
ZQByAGYAYQBjAGUASQBuAHMAdABhAG4AYwBlAEkAZAAAb1QAaABlACAAUABhAGMAawBhAGcAZQAg
AFQAcgBuAC4ASwAwADUALgBFAEQASQAuAFUAQgBMAEQAQQBUAEEATwBOAEwAWQAgAGgAYQBzACAA
YgBlAGUAbgAgAGkAbgBpAHQAaQBhAHQAZQBkAC4AAHFTAFQAXwAzADQAZgAwAGYAMQA1AGUAZABj
AGUANgA0ADUAMQA2AGEAZgA1ADgAZgBhAGMAMwBkADcANgAyADgAMgBjADIALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAAoF1UxHRd9LhxFi79Ov8/gABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVEEIAASYQQgABJlBSABEmkcAyAAHAMgAA4FIAIODg4EAAARdQYV
EXkBEXUFIAEBEwAWIAgBDg4ODhwdBRUReQERdRUSfQIOHAgAARKAgRGAhQUgABKAiQcgAgEOEoCJ
CLd6XFYZNOCJCImEXc2AgMyRCPjJNCukniL4BAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQE
AAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8zNGYwZjE1ZWRjZTY0NTE2YWY1
OGZhYzNkNzYyODJjMgAABQEAAAAACAEAA0NHSQAAGQEAFENvcHlyaWdodCBAIENHSSAyMDI1AABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjgBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuOAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFAwAAAAAAAAAAAAAGowAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABcMAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAJgQAAAAAAAAAAAAAJgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABACeHbSQAAAEAJ4dtJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBIYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGIDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAoAAQAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAEMARwBJAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBv
AG4AAAAAAFMAVABfADMANABmADAAZgAxADUAZQBkAGMAZQA2ADQANQAxADYAYQBmADUAOABmAGEA
YwAzAGQANwA2ADIAOAAyAGMAMgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu
ADAALgA5ADMAMgA1AC4AMwA0ADUAOQA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAVABfADMANABmADAAZgAxADUAZQBkAGMAZQA2ADQANQAxADYAYQBmADUAOABmAGEAYwAz
AGQANwA2ADIAOAAyAGMAMgAuAGQAbABsAAAATgAVAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAQwBHAEkAIAAyADAAMgA1AAAAAAAqAAEAAQBM
AGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEA
bABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwAzADQAZgAwAGYAMQA1AGUAZABjAGUANgA0ADUAMQA2
AGEAZgA1ADgAZgBhAGMAMwBkADcANgAyADgAMgBjADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQA
dQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMwA0AGYAMABmADEANQBlAGQAYwBlADYANAA1ADEANgBh
AGYANQA4AGYAYQBjADMAZAA3ADYAMgA4ADIAYwAyAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADMAMgA1AC4AMwA0ADUAOQA5AAAAAABGAA8AAQBBAHMAcwBl
AG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA5ADMAMgA1AC4AMwA0ADUAOQA5AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHwwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{C50BAA4A-EE33-449F-9D6B-FBCB3AD0872B}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:PropertyExpression
        DTS:Name="Disable">@[User::RGCountPeppolDataOnly]==0</DTS:PropertyExpression>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\ESQL EDI_EID_Tracking_Datastore_Insert"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2FA0E2B6-EF21-4D82-AEB8-604C1E11A36C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="ESQL EDI_EID_Tracking_Datastore_Insert"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CC45E353-B43D-402B-BA97-86B2FCC5941E}"
              SQLTask:SqlStatementSource="EXEC [dbo].[TrnK05_EDI_DATAONLY_Tracking_Datastore_Insert] ?, ?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::InvoiceFulfilmentInterfaceInstanceId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::CountryCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::InterfaceInstanceId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="72"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate EDI XML Files"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{C7AABF6A-F393-4300-9D22-62AE8B999D35}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate EDI XML Files"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_c4d05f2c11c64abeba58c8028bea3a2a"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::DestinationManifestFilePath,User::InvoiceFulfilmentConnectionString,User::InvoiceFulfilmentInterfaceInstanceId">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c4d05f2c11c64abeba58c8028bea3a2a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("CGI")]
[assembly: AssemblyProduct("ST_c4d05f2c11c64abeba58c8028bea3a2a")]
[assembly: AssemblyCopyright("Copyright @ CGI 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Linq;
#endregion

namespace ST_c4d05f2c11c64abeba58c8028bea3a2a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string connString = Dts.Variables["User::InvoiceFulfilmentConnectionString"].Value.ToString();
            connString = Regex.Replace(connString, @"Provider=[^;]*;?", "", RegexOptions.IgnoreCase).Trim();

            string queryString = "SELECT FileName, InvoiceXML FROM dbo.EDIUBL2_DATAONLYFormatData WHERE CAST(InterfaceInstanceID AS NVARCHAR(50)) = @interfaceInstanceId";

            string interfaceInstanceId = Dts.Variables["User::InvoiceFulfilmentInterfaceInstanceId"].Value.ToString();
            string outputFolder = Dts.Variables["User::DestinationManifestFilePath"].Value.ToString();

            try
            {
                using (SqlConnection conn = new SqlConnection(connString))
                {
                    using (SqlCommand cmd = new SqlCommand(queryString, conn))
                    {
                        // Add parameter for filtering
                        cmd.Parameters.AddWithValue("@interfaceInstanceId", interfaceInstanceId);

                        conn.Open();

                        using (SqlDataReader reader = cmd.ExecuteReader())
                        {
                            while (reader.Read())
                            {
                                string fileName = reader["FileName"].ToString();

                                if (string.IsNullOrWhiteSpace(fileName))
                                {
                                    // Skip invalid file names
                                    continue;
                                }

                                if (reader.IsDBNull(reader.GetOrdinal("InvoiceXML")))
                                {
                                    // No XML data for this row, skip file creation
                                    continue;
                                }

                                string xml = reader["InvoiceXML"].ToString();

                                if (string.IsNullOrWhiteSpace(xml))
                                {
                                    // Empty XML string, skip
                                    continue;
                                }

                                try
                                {
                                    // Load XML document from string
                                    XmlDocument originalXml = new XmlDocument();
                                    originalXml.LoadXml(xml);

                                    // Clean namespaces from XML
                                    XmlDocument cleanedXml = RemoveXmlns(originalXml);

                                    // Build full file path
                                    string outputFilePath = Path.Combine(outputFolder, fileName);

                                    // Save cleaned XML to file (UTF-8 encoding and XML declaration included)
                                    cleanedXml.Save(outputFilePath);
                                }
                                catch (Exception exXML)
                                {
                                    // Log warning but continue processing other files
                                    Dts.Events.FireWarning(0, "Script Task",
                                        $"Failed to process and save XML for file '{fileName}': {exXML.Message}", "", 0);
                                }
                            }
                        }
                    }
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Script Task", ex.Message + "\n" + ex.StackTrace, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
           
		}

        private XmlDocument RemoveXmlns(XmlDocument doc)
        {
            XDocument xdoc;
            using (XmlNodeReader nodeReader = new XmlNodeReader(doc))
            {
                xdoc = XDocument.Load(nodeReader);
            }

            // Remove all xmlns attributes (namespace declarations)
            xdoc.Root.Descendants().Attributes()
                .Where(a => a.IsNamespaceDeclaration)
                .Remove();

            // Remove empty elements or those with whitespace-only text
            xdoc.Root.Descendants()
                .Where(e => e.IsEmpty || string.IsNullOrWhiteSpace(e.Value))
                .Remove();

            XmlDocument cleanedXmlDoc = new XmlDocument();
            using (XmlReader xmlReader = xdoc.CreateReader())
            {
                cleanedXmlDoc.Load(xmlReader);
            }

            // Add XML declaration: <?xml version="1.0" encoding="UTF-8"?>
            XmlDeclaration xmlDecl = cleanedXmlDoc.CreateXmlDeclaration("1.0", "UTF-8", null);
            XmlElement root = cleanedXmlDoc.DocumentElement;
            cleanedXmlDoc.InsertBefore(xmlDecl, root);

            return cleanedXmlDoc;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_c4d05f2c11c64abeba58c8028bea3a2a</msb:CodeName>
    <msb:DisplayName>ST_c4d05f2c11c64abeba58c8028bea3a2a</msb:DisplayName>
    <msb:ProjectId>{B25789BB-5D95-419D-A0F2-E8D436DB6AC6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c4d05f2c11c64abeba58c8028bea3a2a.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties.Settings.get_Default():ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties.Sett" +
    "ings")]

namespace ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_c4d05f2c11c64abeba58c8028bea3a2a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E6405609-6526-4FE1-A12B-BBF1698E91BE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c4d05f2c11c64abeba58c8028bea3a2a</RootNamespace>
    <AssemblyName>ST_c4d05f2c11c64abeba58c8028bea3a2a</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c4d05f2c11c64abeba58c8028bea3a2a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_c4d05f2c11c64abeba58c8028bea3a2a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKs4fWgAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAejsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACg7AABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
OwAAAAAAAEgAAAACAAUAYCQAABAWAAABAAAAAAAAAHA6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwD4AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKBnJRAABwcnMAAHAXKBUAAApvFgAACgpydQAAcAsCKBAAAApvEQAACnKEAQBwbxIA
AApvEwAACm8UAAAKDAIoEAAACm8RAAAKctoBAHBvEgAACm8TAAAKbxQAAAoNBnMXAAAKEwQHEQRz
GAAAChMFEQVvGQAACnIeAgBwCG8aAAAKJhEEbxsAAAoRBW8cAAAKEwY4twAAABEGckgCAHBvHQAA
Cm8UAAAKEwcRBygeAAAKOpgAAAARBhEGcloCAHBvHwAACm8gAAAKOoAAAAARBnJaAgBwbx0AAApv
FAAAChMIEQgoHgAACi1kAHMhAAAKEwkRCREIbyIAAAoCEQkoAgAABgkRBygjAAAKEwoRCm8kAAAK
3jgTCwIoEAAACm8lAAAKFnJwAgBwcogCAHARB3LcAgBwEQtvJgAACignAAAKcnMAAHAWbygAAAre
ABEGbykAAAo6Pf///94MEQYsBxEGbyoAAArc3gwRBSwHEQVvKgAACtzeDBEELAcRBG8qAAAK3AIo
EAAAChZvKwAACt5FEwwCKBAAAApvJQAAChZycAIAcBEMbyYAAApy5AIAcBEMbywAAAooLQAACnJz
AABwFm8uAAAKJgIoEAAAChdvKwAACt4AKkF8AAAAAAAACwEAACsAAAA2AQAAOAAAABMAAAECAAAA
sgAAAMoAAAB8AQAADAAAAAAAAAACAAAAjwAAAPsAAACKAQAADAAAAAAAAAACAAAAhQAAABMBAACY
AQAADAAAAAAAAAAAAAAAfQAAADUBAACyAQAARQAAABMAAAEbMAQA0wAAAAIAABEDcy8AAAoTBBEE
KDAAAAoK3gwRBCwHEQRvKgAACtwGbzEAAApvMgAACigzAAAKfggAAAQlLRcmfgcAAAT+Bg0AAAZz
NAAACiWACAAABCgBAAArKDYAAAoGbzEAAApvMgAACn4JAAAEJS0XJn4HAAAE/gYOAAAGczcAAAol
gAkAAAQoAgAAKygDAAArcyEAAAoLBm85AAAKEwUHEQVvOgAACt4MEQUsBxEFbyoAAArcB3LoAgBw
cvACAHAUbzsAAAoMB288AAAKDQcICW89AAAKJgcqAAEcAAACAAgAChIADAAAAAACAJkACqMADAAA
AAAeAig+AAAKKh4CKD8AAAoqrn4BAAAELR5y/AIAcNADAAACKEAAAApvQQAACnNCAAAKgAEAAAR+
AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoQwAACioucwkAAAaAAwAABCoucwwAAAaABwAA
BCoeA29EAAAKKloDb0UAAAotDANvRgAACigeAAAKKhcqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAWAYAACN+AADEBgAA+AgAACNTdHJpbmdzAAAAALwPAABwAwAAI1VTACwT
AAAQAAAAI0dVSUQAAAA8EwAA1AIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAA
ADoAAAAGAAAACQAAAA4AAAAEAAAARgAAAAIAAAARAAAAAgAAAAIAAAADAAAABAAAAAIAAAABAAAA
CAAAAAEAAAACAAAAAwAAAAAA4AQBAAAAAAAGAFsD9QYGAOoD9QYGAKcC4gYPAGkHAAAGANQCtAUG
AD4DtAUGAB8DtAUGANEDtAUGAHsDtAUGAJQDtAUGAOsCtAUGAAYDMQQKAK8DhAQKABMChAQOAOoF
eQgOAPQAeQgOAEoGeQgSAMEIEQUGAPgFLQUWALcIIQYSAHsFEQUSAJgIEQUSAFgGEQUSAIEGEQUG
ADkFLQUGAG8C9QYGAFcILQUGAEkALQUWAGQCIQYWAI8IIQYGAIoC4gYGAI8GFQcGABUGnwUaAE8C
ygQaALsCygQaAC8CigUKALgEhAQeAKsHlwEeAFMBlwEaANYI4AcaAP8H4AcGAFkELQUOAMYFeQgO
AL4GeQgOAN0FAgYOAD0GAgYGAGAEXQAKAKoGhAQGAGcBLQUSAD8BEQUWAJ8GIQYGADsAywAWANUH
IQYiAFwBMQYWADkBIQYGAL8BLQUGAHMBLQUGAOAItAUAAAAAVAAAAAAAAQABAAEAEABPBY4AOQAB
AAEAAAAQABwHeAdtAAEABAAAARAAwAd4B5EAAwAIAAMBAAArCAAAZQAEAAsAAyEQAMcAAABtAAcA
CwARAD4FmgERAAMCnwERACkBpAEGBoYAqAFWgBsIqwFWgOMBqwE2AFAArwEWAAEAswEWAB4AvAFQ
IAAAAACGAFUFBgABANAiAAAAAIEAyQfFAQEAzCMAAAAAhhjVBgYAAgDUIwAAAACDGNUGBgACANwj
AAAAAJMIiwbMAQIACCQAAAAAkwjrAdIBAgAPJAAAAACTCPcB2AECABckAAAAAJYIXgjfAQMAHiQA
AAAAhhjVBgYAAwAmJAAAAACRGNsG5AEDADIkAAAAAJEY2wbkAQMA1CMAAAAAhhjVBgYAAwA+JAAA
AACDAAoA6AEDAEYkAAAAAIMAJwDuAQQAAAABAOYAAAABAB8EAAABALwAAAABAC8ECQDVBgEAEQDV
BgYAGQDVBgoAKQDVBhAAMQDVBhAAOQDVBhAAQQDVBhAASQDVBhAAUQDVBhAAWQDVBhAAYQDVBhAA
aQDVBgYA0QDVBgYA+QDVBgYAGQHVBhUAcQAjCDIAKQGnBzgAMQEkBT4AOQEIBEUA2QBXBEkAQQH/
AE0AUQE0BUkAeQDVBhAAgQDVBlcAgQAMCF4AWQESBGQAaQFKBQYAgQBzBmwAcQEkBXEAUQEHAXYA
cQGtBHsAcQEIBYAAkQDVBgYAkQAcBRAAeQG3AYUAkQAlBBAAKQFFCIsAmQBHAUkAUQFQCJEAgQFL
BJkAcQHqAKIAiQFHAgYAKQFqCAEAmQAaAUkAUQFQCKYAgQHLBq0AuQDVBsUAoQDvAMwAoQDNCNMA
mQE5CNgAqQG1B+IADADVBvsAsQHEAQEBqQEqBB8BFADVBvsAqQEqBDcBuQFmBkMBkQDvAEgBkQB1
BU4BkQCjCFYBkQHWAVsBcQDVBgYA2QDVBgYAwQGFAWcBwQHcCHABAQHVBnYBIQHVBgYA6QBaBaIA
8QDpCKIA8QAIBEkACAAUAJABCAAYAJUBKQB7AC0CLgALAAUCLgATAA4CLgAbAC0CLgAjADYCLgAr
AF8CLgAzAF8CLgA7AGUCLgBDADYCLgBLAG4CLgBTAF8CLgBbAIgCQwBjAJUBSQB7AC0CYQBrAJUB
YwBzAJUBwwBrAJUBHAC2AAMAAQAEAAMAAACPBvQBAAALAvoBAABiCAACAgAFAAMAAgAGAAUAAQAH
AAUAAgAIAAcA8wAqAQSAAAABAAAAdCSdigAAAAAAAI4AAAAEAAAAAAAAAAAAAAB+Ab4AAAAAAA4A
AAAAAAAAAAAAAIcBZQQAAAAABAAAAAAAAAAAAAAAfgGyAAAAAAAEAAAAAAAAAAAAAAB+AREFAAAA
AAQAAAAAAAAAAAAAAH4BIQYAAAAABAAAAAAAAAAAAAAAfgEtBQAAAAAOAAAAAAAAAAAAAACHAWcA
AAAAAAQAAAAAAAAAAAAAAH4BygEAAAAAAAAAAAEAAAAmBwAABQACAAYAAgBrABoBawAyAXEAMgEA
AAA8PjlfXzFfMAA8UmVtb3ZlWG1sbnM+Yl9fMV8wADw+OV9fMV8xADxSZW1vdmVYbWxucz5iX18x
XzEASUVudW1lcmFibGVgMQBGdW5jYDIAPD45ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF9jNGQwNWYyYzExYzY0YWJlYmE1OGM4MDI4
YmVhM2EyYQBTeXN0ZW0uRGF0YQBtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVy
aWMAZG9jAFJlYWQATG9hZABTcWxDb21tYW5kAFJlcGxhY2UASXNOdWxsT3JXaGl0ZVNwYWNlAGdl
dF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBYTm9kZQBYbWxOb2RlAGdldF9NZXNzYWdlAFZh
cmlhYmxlAEVudW1lcmFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUAV2hl
cmUAU3lzdGVtLkNvcmUASW5zZXJ0QmVmb3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFhBdHRyaWJ1dGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAGdldF9WYWx1ZQBBZGRXaXRoVmFsdWUAdmFsdWUAU2F2ZQBSZW1vdmUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBGaXJlV2FybmluZwBUb1N0cmluZwBQYXRoAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AEdldE9yZGluYWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2M0
ZDA1ZjJjMTFjNjRhYmViYTU4YzgwMjhiZWEzYTJhLmRsbABJc0RCTnVsbABTeXN0ZW0uWG1sAExv
YWRYbWwAZ2V0X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1h
aW4AZ2V0X0lzTmFtZXNwYWNlRGVjbGFyYXRpb24AQ3JlYXRlWG1sRGVjbGFyYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3Fs
UGFyYW1ldGVyQ29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24A
U3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAFN5c3RlbS5YbWwuTGlucQBTeXN0ZW0uTGlu
cQBEYkRhdGFSZWFkZXIAU3FsRGF0YVJlYWRlcgBYbWxOb2RlUmVhZGVyAENyZWF0ZVJlYWRlcgBF
eGVjdXRlUmVhZGVyAFhtbFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFhDb250YWluZXIARXZl
bnRzT2JqZWN0V3JhcHBlcgBTcWxQYXJhbWV0ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0
ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVz
b3VyY2VzAFNUX2M0ZDA1ZjJjMTFjNjRhYmViYTU4YzgwMjhiZWEzYTJhLlByb3BlcnRpZXMuUmVz
b3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9jNGQwNWYyYzExYzY0YWJlYmE1OGM4
MDI4YmVhM2EyYS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAQXR0cmlidXRlcwBTZXR0aW5ncwBS
ZW1vdmVYbWxucwBFeHRlbnNpb25zAFN5c3RlbS5UZXh0LlJlZ3VsYXJFeHByZXNzaW9ucwBSZWdl
eE9wdGlvbnMAZ2V0X1BhcmFtZXRlcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMARGVz
Y2VuZGFudHMAZ2V0X0V2ZW50cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVz
dWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABYRWxlbWVudABYbWxFbGVtZW50AGdldF9Eb2N1bWVu
dEVsZW1lbnQAWERvY3VtZW50AFhtbERvY3VtZW50AGdldF9Sb290AFJlZ2V4AGdldF9Bc3NlbWJs
eQBnZXRfSXNFbXB0eQAAAAAAT1UAcwBlAHIAOgA6AEkAbgB2AG8AaQBjAGUARgB1AGwAZgBpAGwA
bQBlAG4AdABDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAhUAByAG8AdgBpAGQAZQBy
AD0AWwBeADsAXQAqADsAPwAAAQCBDVMARQBMAEUAQwBUACAARgBpAGwAZQBOAGEAbQBlACwAIABJ
AG4AdgBvAGkAYwBlAFgATQBMACAARgBSAE8ATQAgAGQAYgBvAC4ARQBEAEkAVQBCAEwAMgBfAEQA
QQBUAEEATwBOAEwAWQBGAG8AcgBtAGEAdABEAGEAdABhACAAVwBIAEUAUgBFACAAQwBBAFMAVAAo
AEkAbgB0AGUAcgBmAGEAYwBlAEkAbgBzAHQAYQBuAGMAZQBJAEQAIABBAFMAIABOAFYAQQBSAEMA
SABBAFIAKAA1ADAAKQApACAAPQAgAEAAaQBuAHQAZQByAGYAYQBjAGUASQBuAHMAdABhAG4AYwBl
AEkAZAAAVVUAcwBlAHIAOgA6AEkAbgB2AG8AaQBjAGUARgB1AGwAZgBpAGwAbQBlAG4AdABJAG4A
dABlAHIAZgBhAGMAZQBJAG4AcwB0AGEAbgBjAGUASQBkAABDVQBzAGUAcgA6ADoARABlAHMAdABp
AG4AYQB0AGkAbwBuAE0AYQBuAGkAZgBlAHMAdABGAGkAbABlAFAAYQB0AGgAAClAAGkAbgB0AGUA
cgBmAGEAYwBlAEkAbgBzAHQAYQBuAGMAZQBJAGQAABFGAGkAbABlAE4AYQBtAGUAABVJAG4AdgBv
AGkAYwBlAFgATQBMAAAXUwBjAHIAaQBwAHQAIABUAGEAcwBrAABTRgBhAGkAbABlAGQAIAB0AG8A
IABwAHIAbwBjAGUAcwBzACAAYQBuAGQAIABzAGEAdgBlACAAWABNAEwAIABmAG8AcgAgAGYAaQBs
AGUAIAAnAAEHJwA6ACAAAQMKAAAHMQAuADAAAAtVAFQARgAtADgAAXFTAFQAXwBjADQAZAAwADUA
ZgAyAGMAMQAxAGMANgA0AGEAYgBlAGIAYQA1ADgAYwA4ADAAMgA4AGIAZQBhADMAYQAyAGEALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA6aMzYS6By0ugrEBqJXn1
5wAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgIkVBw0ODg4OEj0SQRJFDg4SSQ4STRJNBSAAEoCV
BSAAEoCZBiABEoCdHAMgABwDIAAOCQAEDg4ODhGApQYgAgEOEj0FIAASgK0HIAISgLEOHAQgABJF
BCABHA4EAAECDgQgAQgOBCABAggFAAIODg4FIAASgMEHAAQODg4ODgggBQEIDg4OCAMgAAIGAAMO
Dg4OCCAFAggODg4IDgcGElESSRJVElkSXRJhBiABARKAyQYAARJREmEEIAASeQkgABUSgNEBEnkQ
AAEVEoDRARJ1FRKA0QESeQcVEnECEnUCBSACARwYGBABAhUSgNEBHgAVEoDRAR4AFRJxAh4AAgQK
ARJ1CgABARUSgNEBEnUHFRJxAhJ5AgQKARJ5CxABAQEVEoDRAR4ABCAAEmEFIAEBEmEHIAMSVQ4O
DgQgABJZCyACEoDJEoDJEoDJCAABEoDhEYDlBSAAEoDpByACAQ4SgOkIt3pcVhk04IkIiYRdzYCA
zJEEAAAAAAQBAAAABAYSgIEEBhKAhQMGEhACBggDBhEUAwYSGAgGFRJxAhJ1AggGFRJxAhJ5AgYg
ARJJEkkFAAASgIEFAAASgIUGAAEBEoCFBAAAEhADAAABBSABAhJ1BSABAhJ5BQgAEoCBBQgAEoCF
BAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NUX2M0ZDA1ZjJjMTFjNjRhYmViYTU4YzgwMjhiZWEzYTJhAAAFAQAAAAAIAQADQ0dJAAAZAQAU
Q29weXJpZ2h0IEAgQ0dJIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuOAEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC44AAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAUDsA
AAAAAAAAAAAAajsAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFw7AAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAACYEAAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQCdinQkAAABAJ2KdCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsASGAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABDAEcASQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwBjADQAZAAwADUAZgAyAGMAMQAxAGMANgA0AGEAYgBlAGIAYQA1ADgAYwA4ADAAMgA4
AGIAZQBhADMAYQAyAGEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OQAzADMAMgAuADMANQA0ADgANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBjADQAZAAwADUAZgAyAGMAMQAxAGMANgA0AGEAYgBlAGIAYQA1ADgAYwA4ADAAMgA4AGIA
ZQBhADMAYQAyAGEALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEMARwBJACAAMgAwADIANQAAAAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AYwA0AGQAMAA1AGYAMgBjADEAMQBjADYANABhAGIAZQBiAGEA
NQA4AGMAOAAwADIAOABiAGUAYQAzAGEAMgBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfAGMANABkADAANQBmADIAYwAxADEAYwA2ADQAYQBiAGUAYgBhADUA
OABjADgAMAAyADgAYgBlAGEAMwBhADIAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOQAzADMAMgAuADMANQA0ADgANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAzADMAMgAuADMANQA0ADgANQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAB8OwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Sequence Container 1"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{F97A6996-AD4E-4F9E-82D5-2362F9906DC1}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container 1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Sequence Container 1\Check For Zip Files In Output"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{1984CC48-5BF2-48E5-81CF-8265039733C4}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check For Zip Files In Output"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_a0d5f9534d3f42c5b55024dc57db4300"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::OutputPath"
                  ReadWriteVariables="User::FlagZIP">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_a0d5f9534d3f42c5b55024dc57db4300.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{74835EA2-033E-49D9-B49B-A0F6957DBEEC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a0d5f9534d3f42c5b55024dc57db4300</RootNamespace>
    <AssemblyName>ST_a0d5f9534d3f42c5b55024dc57db4300</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.IO;
using System.Windows.Forms;
#endregion

namespace ST_a0d5f9534d3f42c5b55024dc57db4300
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string path = Dts.Variables["User::OutputPath"].Value.ToString();
            string[] filelist;

            //list of any zip files in output folder
            filelist = Directory.GetFiles(path, "*.zip*");

            Dts.Variables["User::FlagZIP"].Value = false;

            if (filelist.Length > 0)
            {
                Dts.Variables["User::FlagZIP"].Value = true;
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_a0d5f9534d3f42c5b55024dc57db4300</msb:CodeName>
    <msb:DisplayName>ST_a0d5f9534d3f42c5b55024dc57db4300</msb:DisplayName>
    <msb:ProjectId>{87570C18-BD13-49FD-8E7A-262AAF81CB1B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a0d5f9534d3f42c5b55024dc57db4300.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0d5f9534d3f42c5b55024dc57db4300.Properties.Settings.get_Default():ST_a0d5f9534d3f42c5b55024dc57db4300.Properties.Sett" +
    "ings")]

namespace ST_a0d5f9534d3f42c5b55024dc57db4300.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a0d5f9534d3f42c5b55024dc57db4300")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("CGI")]
[assembly: AssemblyProduct("ST_a0d5f9534d3f42c5b55024dc57db4300")]
[assembly: AssemblyCopyright("Copyright @ CGI 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0d5f9534d3f42c5b55024dc57db4300.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0d5f9534d3f42c5b55024dc57db4300.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0d5f9534d3f42c5b55024dc57db4300.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a0d5f9534d3f42c5b55024dc57db4300.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a0d5f9534d3f42c5b55024dc57db4300.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_a0d5f9534d3f42c5b55024dc57db4300.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAnnfGgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAVi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQuAABPAAAAAEAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
LgAAAAAAAEgAAAACAAUAPCEAABAMAAABAAAAAAAAAEwtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwB5AAAAAAAAAAIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyIwAAcCgVAAAKAigQAAAKbxEAAApyMQAAcG8SAAAKFowcAAABbxYAAAqOLCACKBAA
AApvEQAACnIxAABwbxIAAAoXjBwAAAFvFgAACgIoEAAAChZvFwAACioeAigYAAAKKh4CKBkAAAoq
rn4BAAAELR5yTQAAcNADAAACKBoAAApvGwAACnMcAAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAA
BCoafgMAAAQqHgIoHQAACioucwgAAAaAAwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkA
AAAABQBsAAAA0AMAACN+AAA8BAAAjAUAACNTdHJpbmdzAAAAAMgJAADAAAAAI1VTAIgKAAAQAAAA
I0dVSUQAAACYCgAAeAEAACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAAB8AAAAF
AAAABgAAAAkAAAABAAAAHQAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAA
iQMBAAAAAAAGAC8CYQQGAL4CYQQGAHsBTgQPANUEAAAGAKgBDwQGABICDwQGAPMBDwQGAKUCDwQG
AE8CDwQGAGgCDwQGAL8BDwQGANoB9gIKAIMCOAMKAPoAOAMGAMEDugMGAF4BTgQGAFEFugMGADEE
gQQGACEE+gMOAC4BcwMOAI8BcwMOABYB5QMGAEMBYQQKAGEDOAMSABcFpQASAHgApQAGAIAFLgAG
ANIDugMGAMUAugMGAIEAugMGAHcFDwQAAAAAJQAAAAAAAQABAAEAEADaAwEAOQABAAEAAAAQAIgE
5ARFAAEAAwAAARAAKgXkBFkAAwAHAAMBAABDBQAAPQAEAAoAEQDGA24AEQDqAHIAEQBoAHYABgZX
AHoAVoAzBX0AVoDKAH0AUCAAAAAAhgDgAwYAAQDVIAAAAACGGEEEBgABAN0gAAAAAIMYQQQGAAEA
5SAAAAAAkwgtBIEAAQARIQAAAACTCNIAhgABABghAAAAAJMI3gCLAAEAICEAAAAAlghYBZEAAgAn
IQAAAACGGEEEBgACAC8hAAAAAJEYRwSWAAIAAAABAPACCQBBBAEAEQBBBAYAGQBBBAoAKQBBBBAA
MQBBBBAAOQBBBBAAQQBBBBAASQBBBBAAUQBBBBAAWQBBBBAAYQBBBBAAaQBBBAYAgQBBBAYAqQBB
BBUAuQBBBAYAcQA7BRsAwQATBSAAyQCxAyUA0QDcAisAiQAQAy8A2QAhBTMA0QDmAjoAwQBkBQEA
cQBBBAYAiQBBBAYA6QCTAD8A6QBzBUYAkQBBBEsAsQBBBAYACAAUAGQACAAYAGkAKQBzANEALgAL
AKkALgATALIALgAbANEALgAjANoALgArAAMBLgAzAAMBLgA7AAkBLgBDANoALgBLABIBLgBTAAMB
LgBbACwBQwBjAGkASQBzANEAYQB7AGkAYwBrAGkAAwABAAQAAwAAADEEmgAAAPIAnwAAAFwFpAAC
AAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAHQkzGEAAAAAAAABAAAABAAAAAAAAAAAAAAA
UgBfAAAAAAAOAAAAAAAAAAAAAABbABkDAAAAAAQAAAAAAAAAAAAAAFIAugMAAAAADgAAAAAAAAAA
AAAAWwA4AAAAAAAAAAAAAQAAAJIEAAAFAAIAAAAAAABTVF9hMGQ1Zjk1MzRkM2Y0MmM1YjU1MDI0
ZGM1N2RiNDMwMAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfYTBkNWY5NTM0ZDNmNDJjNWI1NTAyNGRjNTdkYjQz
MDAuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0u
RGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNUX2EwZDVmOTUzNGQzZjQyYzViNTUwMjRkYzU3ZGI0MzAwLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9hMGQ1Zjk1MzRkM2Y0MmM1YjU1MDI0ZGM1
N2RiNDMwMC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAU3VjY2Vz
cwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0
AGdldF9Bc3NlbWJseQBEaXJlY3RvcnkAAAAAIVUAcwBlAHIAOgA6AE8AdQB0AHAAdQB0AFAAYQB0
AGgAAA0qAC4AegBpAHAAKgAAG1UAcwBlAHIAOgA6AEYAbABhAGcAWgBJAFAAAHFTAFQAXwBhADAA
ZAA1AGYAOQA1ADMANABkADMAZgA0ADIAYwA1AGIANQA1ADAAMgA0AGQAYwA1ADcAZABiADQAMwAw
ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAADd2C8TBRmBQqnb
uC0O0CzMAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgABwDIAAO
BgACHQ4ODgQgAQEcBgABEnUReQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0E
CAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfYTBkNWY5NTM0ZDNmNDJjNWI1NTAyNGRjNTdkYjQzMDAAAAUBAAAAAAgBAANDR0kAABkBABRD
b3B5cmlnaHQgQCBDR0kgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC44AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjgAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAsLgAA
AAAAAAAAAABGLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOC4AAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAACYEAAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDMYXQkAAABAMxhdCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsASGAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAABDAEcASQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBhADAAZAA1AGYAOQA1ADMANABkADMAZgA0ADIAYwA1AGIANQA1ADAAMgA0
AGQAYwA1ADcAZABiADQAMwAwADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4AOQAzADMAMgAuADIANQAwADMANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBhADAAZAA1AGYAOQA1ADMANABkADMAZgA0ADIAYwA1AGIANQA1ADAAMgA0AGQA
YwA1ADcAZABiADQAMwAwADAALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAEMARwBJACAAMgAwADIANQAAAAAAKgABAAEA
TABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBh
AGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYQAwAGQANQBmADkANQAzADQAZAAzAGYANAAyAGMA
NQBiADUANQAwADIANABkAGMANQA3AGQAYgA0ADMAMAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBk
AHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGEAMABkADUAZgA5ADUAMwA0AGQAMwBmADQAMgBjADUA
YgA1ADUAMAAyADQAZABjADUANwBkAGIANAAzADAAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAzADMAMgAuADIANQAwADMANgAAAAAARgAPAAEAQQBzAHMA
ZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAzADMAMgAuADIANQAwADMANgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABYPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Sequence Container 1\Foreach Loop Container for each zip file"
              DTS:CreationName="STOCK:FOREACHLOOP"
              DTS:Description="Foreach Loop Container"
              DTS:DTSID="{9917F01A-FCF6-4595-A5E0-3732E512A6D9}"
              DTS:ExecutableType="STOCK:FOREACHLOOP"
              DTS:LocaleID="-1"
              DTS:ObjectName="Foreach Loop Container for each zip file">
              <DTS:ForEachEnumerator
                DTS:CreationName="Microsoft.ForEachFileEnumerator"
                DTS:DTSID="{0D90C0BA-AE23-49FA-9BBE-A5CEEC990400}"
                DTS:ObjectName="{0D90C0BA-AE23-49FA-9BBE-A5CEEC990400}">
                <DTS:PropertyExpression
                  DTS:Name="Directory">@[User::OutputPath]</DTS:PropertyExpression>
                <DTS:ObjectData>
                  <ForEachFileEnumeratorProperties>
                    <FEFEProperty
                      Folder="C:\YASWANTH\EDIDataOnly\OUTPUT" />
                    <FEFEProperty
                      FileSpec="*.zip_*" />
                    <FEFEProperty
                      FileNameRetrievalType="0" />
                    <FEFEProperty
                      Recurse="0" />
                  </ForEachFileEnumeratorProperties>
                </DTS:ObjectData>
              </DTS:ForEachEnumerator>
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0"
                DTS:LoggingMode="1">
                <DTS:Property
                  DTS:DataType="8"
                  DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
                <DTS:Property
                  DTS:EventName="OnError"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
                <DTS:Property
                  DTS:EventName="OnWarning"
                  DTS:Name="ColumnFilter">
                  <DTS:Property
                    DTS:Name="Computer">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="Operator">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceName">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="SourceID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="ExecutionID">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="MessageText">-1</DTS:Property>
                  <DTS:Property
                    DTS:Name="DataBytes">-1</DTS:Property>
                </DTS:Property>
              </DTS:LoggingOptions>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Sequence Container 1\Foreach Loop Container for each zip file\SQL Output Path"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{73FAF9B4-F140-433C-94C3-039A87F7FA13}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="SQL Output Path"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:FilterKind="0"
                    DTS:LoggingMode="1">
                    <DTS:Property
                      DTS:DataType="8"
                      DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
                    <DTS:Property
                      DTS:EventName="OnError"
                      DTS:Name="ColumnFilter">
                      <DTS:Property
                        DTS:Name="Computer">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="Operator">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="SourceName">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="SourceID">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="ExecutionID">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="MessageText">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="DataBytes">-1</DTS:Property>
                    </DTS:Property>
                    <DTS:Property
                      DTS:EventName="OnWarning"
                      DTS:Name="ColumnFilter">
                      <DTS:Property
                        DTS:Name="Computer">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="Operator">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="SourceName">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="SourceID">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="ExecutionID">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="MessageText">-1</DTS:Property>
                      <DTS:Property
                        DTS:Name="DataBytes">-1</DTS:Property>
                    </DTS:Property>
                  </DTS:LoggingOptions>
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{5F72D68A-9798-4AF9-86EA-AF29FED5FF48}"
                      SQLTask:SqlStatementSource="EXEC TransformationEndpointUpdateOutputPath ?, 'SentFileToWorldline', ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::InterfaceInstanceId"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="72"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::OutputFilePath"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="130"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:ForEachVariableMappings>
                <DTS:ForEachVariableMapping
                  DTS:CreationName=""
                  DTS:DTSID="{415C3CA6-8934-47DB-8248-C674AB4D9AFE}"
                  DTS:ObjectName="{415C3CA6-8934-47DB-8248-C674AB4D9AFE}"
                  DTS:ValueIndex="0"
                  DTS:VariableName="User::OutputFilePath" />
              </DTS:ForEachVariableMappings>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Sequence Container 1.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{0AFF7505-2E55-4FA4-8EE2-26B6FBFF3D81}"
              DTS:EvalOp="1"
              DTS:Expression="@FlagZIP == True"
              DTS:From="Package\Sequence Container\Sequence Container 1\Check For Zip Files In Output"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Sequence Container 1\Foreach Loop Container for each zip file" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\SQL - Populate PeppolDataOnly data"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BAA25382-C4A6-4E7F-91AA-D1B589B1B459}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - Populate PeppolDataOnly data"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{CC45E353-B43D-402B-BA97-86B2FCC5941E}"
              SQLTask:SqlStatementSource="EXEC TrnK05_EDI_PopulateUBL2_PeppolBIS3_DATAONLYFormatData ?,?,?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::InvoiceFulfilmentInterfaceInstanceId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::CountryCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::FileFormatPeppoIDataOnly"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\SQL GET Colco override flag"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FF0E5099-0C93-4D8E-92F7-BEFC0956D0EF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL GET Colco override flag"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5F72D68A-9798-4AF9-86EA-AF29FED5FF48}"
              SQLTask:SqlStatementSource="DECLARE @VALUE VARCHAR(50)&#xA;SELECT @VALUE = ParameterValue  FROM TrnK05_Parameters &#xA;WHERE ParameterName = 'OverrideColco'&#xA;AND CompanyID = ?&#xA;&#xA;SELECT ISNULL(@VALUE,'N') AS ParameterValue"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::IsColcoOverride" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::CountryCode"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\SQL Get interfaceid for OU"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{43FA7787-51C1-4CC8-BF35-1317C6C619BB}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Get interfaceid for OU"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{5F72D68A-9798-4AF9-86EA-AF29FED5FF48}"
              SQLTask:SqlStatementSource="SELECT Replace(Replace(InterfaceID,'{',''),'}','') FROM Interface WHERE Name = ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::EIDInterfaceId" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ParmGetInterfaceId"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Zip the files"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{A565E81C-1AD5-4DE0-8121-4B0D135AB83D}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Zip the files"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="OnWarning"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_eb341ec864404e1888d6e08c335fc26d"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ATOSColcoid,User::AuditConnectionString,User::ConfigConnectionString,User::CountryCode,User::CountrySuffix,User::DestinationManifestFilePath,User::EIDInterfaceId,User::Environment,User::InterfaceId,User::InterfaceInstanceId,User::InterfaceName,User::InvoiceFulfilmentConnectionString,User::InvoiceFulfilmentInterfaceInstanceId,User::IsColcoOverride,User::WorkingFolder,User::ZipFileLimit,User::ZipPrefix"
              ReadWriteVariables="User::OutputPath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb341ec864404e1888d6e08c335fc26d.Properties.Settings.get_Default():ST_eb341ec864404e1888d6e08c335fc26d.Properties.Sett" +
    "ings")]

namespace ST_eb341ec864404e1888d6e08c335fc26d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using ICSharpCode.SharpZipLib.Zip;
using LogicaCards.IntPlat.Common.Helper;
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Text.RegularExpressions;
using System.Windows.Forms;
using System.Xml;
#endregion

namespace ST_eb341ec864404e1888d6e08c335fc26d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        const string sequenceNumberSubKey = "OutputFileSequenceNumber";
        int nextSequenceNumber = 0;
        SequenceNumberManager sequenceNumberManager;
        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{

            string colCo = string.Empty;
            string isColcoOverride = Dts.Variables["User::IsColcoOverride"].Value.ToString();
            if (isColcoOverride == "Y")
                colCo = Dts.Variables["User::ATOSColcoid"].Value.ToString().PadLeft(3, '0');
            else
                colCo = Dts.Variables["User::CountryCode"].Value.ToString().PadLeft(3, '0');

            string dt = DateTime.Now.ToUniversalTime().ToString("yyMMddHHmmss");

            string DestinationManifestFilePath = Dts.Variables["User::DestinationManifestFilePath"].Value.ToString();

            string environment = Dts.Variables["User::Environment"].Value.ToString();
            string prefix = Dts.Variables["User::ZipPrefix"].Value.ToString();
            string workingFolder = Dts.Variables["User::WorkingFolder"].Value.ToString();
            string outputFilepath = Path.Combine(workingFolder, "OUTPUT");
            Dts.Variables["User::OutputPath"].Value = outputFilepath;

            if (!Directory.Exists(outputFilepath))
            {
                Directory.CreateDirectory(outputFilepath);
            }
            string InterfaceInstanceId = Dts.Variables["User::InterfaceInstanceId"].Value.ToString();
            Guid.TryParse(InterfaceInstanceId, out Guid interfaceInstanceId);

            sequenceNumberManager = new SequenceNumberManager(Dts.Variables["User::ConfigConnectionString"].Value.ToString(),
                    Dts.Variables["User::AuditConnectionString"].Value.ToString(),
                    Dts.Variables["User::EIDInterfaceId"].Value.ToString(),
                    Dts.Variables["User::InterfaceInstanceId"].Value.ToString());


            string connString = Dts.Variables["User::InvoiceFulfilmentConnectionString"].Value.ToString();
            connString = Regex.Replace(connString, @"Provider=[^;]*;?", "", RegexOptions.IgnoreCase).Trim();

            int ZipNumber = 0;
            ++ZipNumber;

            string InvoiceFulfilmentInterfaceInstanceId = Dts.Variables["User::InvoiceFulfilmentInterfaceInstanceId"].Value.ToString();
            DataTable metadataTable = LoadMetadataTable(connString, InvoiceFulfilmentInterfaceInstanceId);

            // Get all files, excluding .zip and manifest.xml
            var files = Directory.GetFiles(DestinationManifestFilePath);
            var filesToZip = new List<string>();
            foreach (var file in files)
            {
                string name = Path.GetFileName(file);
                if (name.Equals("manifest.xml", StringComparison.OrdinalIgnoreCase) || name.IndexOf(".ZIP", StringComparison.OrdinalIgnoreCase) > -1)
                    continue;
                filesToZip.Add(file);
            }
            int batchSize = Convert.ToInt32(Dts.Variables["User::ZipFileLimit"].Value) - 1;
            int zipIndex = 1;

            for (int i = 0; i < filesToZip.Count; i += batchSize)
            {
                var batch = filesToZip.GetRange(i, Math.Min(batchSize, filesToZip.Count - i));
                var batchFileNames = new List<string>();
                foreach (var file in batch)
                    batchFileNames.Add(Path.GetFileName(file));
                nextSequenceNumber = sequenceNumberManager.GetNextSequenceNumberConfirmMode(Dts.Variables["User::EIDInterfaceId"].Value.ToString(), sequenceNumberSubKey, interfaceInstanceId);
                string destFileName = prefix + "_" + colCo + "_" + nextSequenceNumber.ToString().PadLeft(6, '0') + "_" + dt + ".ZIP" + "_" + environment;
                string zipPath = Path.Combine(outputFilepath, destFileName);
                // Build manifest.xml as a string, fetching data from DB
                string manifestXml = BuildManifestXmlFromDataTable(metadataTable, batchFileNames, colCo);

                using (var zipStream = new FileStream(zipPath, FileMode.Create))
                using (var zip = new ZipOutputStream(zipStream))
                {
                    // Add files to zip
                    foreach (var file in batch)
                    {
                        var entryName = Path.GetFileName(file);
                        var entry = new ZipEntry(entryName)
                        {
                            DateTime = File.GetLastWriteTime(file)
                        };
                        zip.PutNextEntry(entry);

                        using (var fs = File.OpenRead(file))
                        {
                            fs.CopyTo(zip);
                        }
                        zip.CloseEntry();
                    }
                    // Add manifest.xml
                    var manifestEntry = new ZipEntry("manifest.xml")
                    {
                        DateTime = DateTime.Now
                    };
                    zip.PutNextEntry(manifestEntry);

                    using (var writer = new StreamWriter(zip, System.Text.Encoding.UTF8, 1024, true))
                    {
                        writer.Write(manifestXml);
                    }
                    zip.CloseEntry();

                }
                zipIndex++;
                
                dt = DateTime.Now.ToString("yyMMddHHmmss");
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}


        // Helper to build manifest.xml as a string, fetching data from DB
        // Loads all metadata into a DataTable
        private DataTable LoadMetadataTable(string connString, string interfaceInstanceId)
        {
            var dt = new DataTable();
            using (var conn = new SqlConnection(connString))
            using (var cmd = new SqlCommand("TrnK05_EDIDATAONLY_ReadManifestData", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@InterfaceInstanceId", interfaceInstanceId);

                using (var da = new SqlDataAdapter(cmd))
                {
                    conn.Open();
                    da.Fill(dt);
                }
            }
            return dt;
        }

        // Builds manifest.xml using the DataTable for lookups
        private string BuildManifestXmlFromDataTable(DataTable metadataTable, List<string> batchFileNames, string opcoId)
        {
            var ns = "http://www.atosworldline.com/wli/shell/parsing/h3e/manifest/1.0";
            using (var sw = new StringWriter())
            using (var xw = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true }))
            {
                xw.WriteStartDocument();
                xw.WriteStartElement("eids", ns);

                foreach (string fileName in batchFileNames)
                {
                    // Find the row in the DataTable for this file
                    DataRow[] rows = metadataTable.Select($"fileName = '{fileName.Replace("'", "''")}'");
                    if (rows.Length == 0)
                    {
                        xw.WriteStartElement("eid");
                        xw.WriteElementString("accountGroupId", "Record Not Found");
                        xw.WriteElementString("opcoId", opcoId.TrimStart('0'));
                        xw.WriteElementString("type", "NAT");
                        xw.WriteElementString("fileName", fileName);
                        xw.WriteElementString("fileformat", "Record Not Found");
                        xw.WriteElementString("numberOfInvoices", "0");
                        xw.WriteElementString("invoiceDate", "");
                        xw.WriteElementString("dueDate", "");
                        xw.WriteEndElement();
                    }

                    else
                    {
                        DataRow row = rows[0];

                        xw.WriteStartElement("eid");
                        xw.WriteElementString("accountGroupId", row["accountGroupId"].ToString());
                        xw.WriteElementString("opcoId", opcoId.TrimStart('0'));
                        xw.WriteElementString("delcoId", row["delcoId"].ToString());
                        xw.WriteElementString("type", row["type"].ToString());
                        xw.WriteElementString("fileName", fileName);
                        xw.WriteElementString("fileformat", row["fileformat"].ToString());
                        xw.WriteElementString("numberOfInvoices", row["numberOfInvoices"].ToString());
                        xw.WriteElementString("invoiceDate", Convert.ToDateTime(row["invoiceDate"]).ToString("yyyy-MM-dd"));
                        xw.WriteElementString("dueDate", Convert.ToDateTime(row["dueDate"]).ToString("yyyy-MM-dd"));
                        xw.WriteEndElement(); // eid
                    }
                }

                xw.WriteEndElement(); // eids
                xw.WriteEndDocument();
                xw.Flush();
                return sw.ToString();
            }

        }




        //public void ZipFolder(string zipFile, string baseFolder)
        //{
        //    FastZip zip = new FastZip();
        //    zip.CreateEmptyDirectories = true;
        //    zip.CreateZip(zipFile, baseFolder, true, "");
        //}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_eb341ec864404e1888d6e08c335fc26d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8A93A30E-D936-4A84-A3D4-33999C126E73}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_eb341ec864404e1888d6e08c335fc26d</RootNamespace>
    <AssemblyName>ST_eb341ec864404e1888d6e08c335fc26d</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="ICSharpCode.SharpZipLib, Version=1.4.2.13, Culture=neutral, PublicKeyToken=1b03e6acf1164f73, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\ICSharpCode.SharpZipLib\v4.0_1.4.2.13__1b03e6acf1164f73\ICSharpCode.SharpZipLib.dll</HintPath>
    </Reference>
    <Reference Include="LogicaCards.IntPlat.Common.Audit, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f8c9342ba49e22f8, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\LogicaCards.IntPlat.Common.Audit\v4.0_1.0.0.0__f8c9342ba49e22f8\LogicaCards.IntPlat.Common.Audit.dll</HintPath>
    </Reference>
    <Reference Include="LogicaCards.IntPlat.Common.Helper, Version=1.0.0.1, Culture=neutral, PublicKeyToken=6faa16810d418f40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\LogicaCards.IntPlat.Common.Helper\v4.0_1.0.0.1__6faa16810d418f40\LogicaCards.IntPlat.Common.Helper.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_eb341ec864404e1888d6e08c335fc26d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_eb341ec864404e1888d6e08c335fc26d</msb:DisplayName>
    <msb:ProjectId>{0CCCAE05-4ABC-4519-AED0-6DB0F7A0B57D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_eb341ec864404e1888d6e08c335fc26d.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_eb341ec864404e1888d6e08c335fc26d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("CGI")]
[assembly: AssemblyProduct("ST_eb341ec864404e1888d6e08c335fc26d")]
[assembly: AssemblyCopyright("Copyright @ CGI 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb341ec864404e1888d6e08c335fc26d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb341ec864404e1888d6e08c335fc26d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb341ec864404e1888d6e08c335fc26d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_eb341ec864404e1888d6e08c335fc26d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_eb341ec864404e1888d6e08c335fc26d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_eb341ec864404e1888d6e08c335fc26d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHClpGgAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAWkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAhGAABPAAAAAGAAAIQEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIQEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
RgAAAAAAAEgAAAACAAUAtCkAAJwbAAABAAAAAAAAAFBFAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwAnBQAAAQAAEX4QAAAKCgIoEQAACm8SAAAKcgEAAHBv
EwAACm8UAAAKbxUAAApyLQAAcCgWAAAKLCoCKBEAAApvEgAACnIxAABwbxMAAApvFAAACm8VAAAK
GR8wbxcAAAoKKygCKBEAAApvEgAACnJVAABwbxMAAApvFAAACm8VAAAKGR8wbxcAAAoKKBgAAAoT
DBIMKBkAAAoTDBIMcnkAAHAoGgAACgsCKBEAAApvEgAACnKTAABwbxMAAApvFAAACm8VAAAKAigR
AAAKbxIAAApy1wAAcG8TAAAKbxQAAApvFQAACgwCKBEAAApvEgAACnL7AABwbxMAAApvFAAACm8V
AAAKDQIoEQAACm8SAAAKchsBAHBvEwAACm8UAAAKbxUAAApyQwEAcCgbAAAKEwQCKBEAAApvEgAA
CnJRAQBwbxMAAAoRBG8cAAAKEQQoHQAACi0IEQQoHgAACiYCKBEAAApvEgAACnJzAQBwbxMAAApv
FAAACm8VAAAKEgUoHwAACiYCAigRAAAKbxIAAApypwEAcG8TAAAKbxQAAApvFQAACgIoEQAACm8S
AAAKcuEBAHBvEwAACm8UAAAKbxUAAAoCKBEAAApvEgAACnIZAgBwbxMAAApvFAAACm8VAAAKAigR
AAAKbxIAAApycwEAcG8TAAAKbxQAAApvFQAACnMgAAAKfQMAAAQCKBEAAApvEgAACnJDAgBwbxMA
AApvFAAACm8VAAAKEwYRBnKTAgBwcrUCAHAXKCEAAApvIgAAChMGFhdYJgIoEQAACm8SAAAKcrcC
AHBvEwAACm8UAAAKbxUAAAoTBwIRBhEHKAIAAAYTCCgjAAAKcyQAAAoTCRMNFhMOKz4RDREOmhMP
EQ8oJQAAChMQERByDQMAcBtvJgAACi0ZERByJwMAcBtvJwAAChUwCREJEQ9vKAAAChEOF1gTDhEO
EQ2OaTK6AigRAAAKbxIAAApyMQMAcG8TAAAKbxQAAAooKQAAChdZEwoXEwsWExE4FQIAABEJERER
ChEJbyoAAAoREVkoKwAACm8sAAAKExJzJAAAChMTERJvLQAAChMWKxcSFiguAAAKExcRExEXKCUA
AApvKAAAChIWKC8AAAot4N4OEhb+FgIAABtvMAAACtwCAnsDAAAEAigRAAAKbxIAAApyGQIAcG8T
AAAKbxQAAApvFQAACnJXAwBwEQVvMQAACn0CAAAEHwmNKAAAASUWCaIlF3KJAwBwoiUYBqIlGXKJ
AwBwoiUaAnwCAAAEKDIAAAocHzBvFwAACqIlG3KJAwBwoiUcB6IlHXKNAwBwoiUeCKIoMwAAChMU
EQQRFCgbAAAKAhEIERMGKAMAAAYTFRhzNAAAChMYERhzNQAAChMZERJvLQAAChMWK1QSFiguAAAK
ExsRGyglAAAKczYAAAolERsoNwAACm84AAAKExwRGREcbzkAAAoRGyg6AAAKEx0RHREZbzsAAAre
DBEdLAcRHW8wAAAK3BEZbzwAAAoSFigvAAAKLaPeDhIW/hYCAAAbbzAAAArccg0DAHBzNgAACiUo
GAAACm84AAAKExoRGREabzkAAAoRGSg9AAAKIAAEAAAXcz4AAAoTHhEeERVvPwAACt4MER4sBxEe
bzAAAArcERlvPAAACt4YERksBxEZbzAAAArcERgsBxEYbzAAAArcEQsXWBMLKBgAAAoTDBIMcnkA
AHAoGgAACgsREREKWBMRERERCW8qAAAKP939//8CKBEAAAoWb0AAAAoqAAFMAAACACMDJEcDDgAA
AAACAEgEC1MEDAAAAAACABAEYXEEDgAAAAACALMEC74EDAAAAAACAAcEzNMEDAAAAAACAP4D4d8E
DAAAAAAbMAMAaQAAAAIAABFzQQAACgoDc0IAAAoLcpkDAHAHc0MAAAoMCBpvRAAACghvRQAACnLh
AwBwBG9GAAAKJghzRwAACg0Hb0gAAAoJBm9JAAAKJt4eCSwGCW8wAAAK3AgsBghvMAAACtwHLAYH
bzAAAArcBioAAAABKAAAAgA5ABBJAAoAAAAAAgAZADpTAAoAAAAAAgANAFBdAAoAAAAAGzAHAIQC
AAADAAARcgsEAHAKc0oAAAoLB3NLAAAKJRdvTAAACihNAAAKDAhvTgAACghyiwQAcAZvTwAACgRv
LQAACg04+AEAABIDKC4AAAoTBANylQQAcBEEcq8EAHByswQAcG9QAAAKcq8EAHAoUQAACm9SAAAK
EwURBY46nwAAAAhyuQQAcG9TAAAKCHLBBABwct8EAHBvVAAACghyAQUAcAUXjUIAAAElFh8wnW9V
AAAKb1QAAAoIcg8FAHByGQUAcG9UAAAKCHIhBQBwEQRvVAAACghyMwUAcHLfBABwb1QAAAoIckkF
AHByawUAcG9UAAAKCHJvBQBwcrUCAHBvVAAACghyhwUAcHK1AgBwb1QAAAoIb1YAAAo4IAEAABEF
FpoTBghyuQQAcG9TAAAKCHLBBABwEQZywQQAcG9XAAAKbxUAAApvVAAACghyAQUAcAUXjUIAAAEl
Fh8wnW9VAAAKb1QAAAoIcpcFAHARBnKXBQBwb1cAAApvFQAACm9UAAAKCHIPBQBwEQZyDwUAcG9X
AAAKbxUAAApvVAAACghyIQUAcBEEb1QAAAoIcjMFAHARBnIzBQBwb1cAAApvFQAACm9UAAAKCHJJ
BQBwEQZySQUAcG9XAAAKbxUAAApvVAAACghybwUAcBEGcm8FAHBvVwAACihYAAAKEwcSB3KnBQBw
KBoAAApvVAAACghyhwUAcBEGcocFAHBvVwAACihYAAAKEwcSB3KnBQBwKBoAAApvVAAACghvVgAA
ChIDKC8AAAo6/P3//94OEgP+FgIAABtvMAAACtwIb1YAAAoIb1kAAAoIb1oAAAoHbxUAAAoTCN4U
CCwGCG8wAAAK3AcsBgdvMAAACtwRCCpBTAAAAgAAADgAAAALAgAAQwIAAA4AAAAAAAAAAgAAAB8A
AABOAgAAbQIAAAoAAAAAAAAAAgAAAAwAAABrAgAAdwIAAAoAAAAAAAAAHgIoWwAACioeAihcAAAK
Kq5+BAAABC0ecr0FAHDQAwAAAihdAAAKb14AAApzXwAACoAEAAAEfgQAAAQqGn4FAAAEKh4CgAUA
AAQqGn4GAAAEKh4CKGAAAAoqLnMKAAAGgAYAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMx
OQAAAAAFAGwAAAD4BgAAI34AAGQHAAB0CgAAI1N0cmluZ3MAAAAA2BEAADAGAAAjVVMACBgAABAA
AAAjR1VJRAAAABgYAACEAwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAwAAAPoBMwAWAAABAAAARQAA
AAUAAAAJAAAACwAAAAYAAABgAAAAAwAAABAAAAADAAAAAgAAAAMAAAAEAAAAAgAAAAEAAAAIAAAA
AQAAAAEAAAAAAG4FAQAAAAAABgDIA8sHBgBXBMsHBgAUA7gHDwA/CAAABgBBAyUGBgCrAyUGBgCM
AyUGBgA+BCUGBgDoAyUGBgABBCUGBgBYAyUGBgBzA60ECgAcBB0FCgB1Ah0FDgD2BiIHBgDnAMoF
EgBgAVMABgABAIAABgDjAcoFSwCgBwAABgCmBSIAFgCxBa4GFgBLCq4GBgBoByIAEgBbBl8JEgD2
AF8JEgCOB18JBgBRByIAGgBeB5sFEgAAClMABgDWBcoFBgD3ArgHBgAjCcoFBgDmBusHBgCUBhAG
HgDBAlgFHgAoA1gFHgCRAvsFBgDcAssHBgDnBMoFCgBGBR0FIgCBCA0CIgCKAQ0CBgD5BCIABgA2
CiIABgCgBiIAHgAICrwIHgDbCLwIBgB8BsoFBgDbCcoFBgD0BMoFBgCTAcoFBgAKAMoFBgAZASIA
BgC6BSIABgDDASIABgCkBOwJBgB1ByIAEgDsAGkGEgA5AlMAEgA3Bl8JEgBEB18JEgBOBmkGEgCA
B2kGGgCjCJsFBgDKBsoFBgBAAsoFBgCfAcoFBgAnCiUGAAAAABkAAAAAAAEAAQABABAA8AWbADkA
AQABAAAAEADyB04IhQAEAAUAAAEQAKwITgiZAAYACQADAQAABwkAAH0ABwAMAFGADgpYAAEAzwZc
AgEADAdfAhEA2wVjAhEAZQJoAhEACQFtAgYGSwBcAlaA9whxAlaARQJxAlAgAAAAAIYA9gUGAAEA
0CUAAAAAgQBqAXUCAQBwJgAAAACBAEwBfAIDAEwpAAAAAIYYqwcGAAYAVCkAAAAAgxirBwYABgBc
KQAAAACTCOIGiAIGAIgpAAAAAJMITQKOAgYAjykAAAAAkwhZApQCBgCXKQAAAACWCDkJmwIHAJ4p
AAAAAIYYqwcGAAcApikAAAAAkRixB6ACBwAAAAEAxwQAAAIAvwAAAAEAfAEAAAIAlAgAAAMA0wAA
AAEAlgQJAKsHAQARAKsHBgAZAKsHCgApAKsHEAAxAKsHEAA5AKsHEABBAKsHEABJAKsHEABRAKsH
EABZAKsHEABhAKsHEABpAKsHBgABAasHBgApAasHFQA5AasHBgBBAW0KWABxAP8IWwBJAX0IYQBR
AcEFZwBZAXUEbgAJAdIEcgBBAWEKdgBBATEJfACZAPgJggCZAP0BhwCZANIEjABhAS0CkQBZAX8E
lwBpARUJnABpATAKoQCBALECqAB5AKsHsAB5AQEBuABBAdEFcgBpAYsIwgAMAKsHBgBhAcgBzgBB
AbUI0wBBAZwE2wAMAOMA4wCRAQgA6QAMAMcJ7gCZAewF8gAMAEMB+AAMAJ0HAwEUALsJEgEUAOMJ
FwGhAakCBgB5ACIBGwGpAdIEcgBBARwJIwGpAKsHKQGxAKsHMQG5AKsHEADBAewBOAG5ANQBPgGx
AFQKRAHBAdoASgG5AY0GMQGxAEAKBgDJARAAUAHBAKsHVgHRAdYCEABJAUUJAQCJAKsHBgDJAKsH
EADRAKsHbQHZATUCdAHRAOgIewHpAYkEgQHZAKsHiQH5AecFBgABApYFjwHhAKsHBgAJAqsHBgAJ
AlQJqwHpALoCsAHpAKgJBgDpAIUJuwFBAQEBwQFBARwJxwGJACoJzgHpAIUJEADpANsEuwFBAdEJ
1QHpAHUJBgDxAMEF2wGRAeEB4AHpAJcJBgDpAO4EBgBxAKsHBgAJAasHBgAZArEB5gEZAiMK7wER
AasH9QExAasHBgAOAAQAIQIIACAAUgIIACQAVwIpAHMA3QIuAAsAtQIuABMAvgIuABsA3QIuACMA
5gIuACsADwMuADMADwMuADsAFQMuAEMA5gIuAEsAHgMuAFMADwMuAFsAOANDAGMAVwJJAHMA3QJj
AGsAVwLBAHsAVwIcAGIBlQEDAAEABAADAAAA5gakAgAAbQKqAgAAPQmwAgIABgADAAIABwAFAAEA
CAAFAAIACQAHAMgADAEEgAAAAQAAAJIkgHoAAAAAAACbAAAABAAAAAAAAAAAAAAA/QF3AAAAAAAO
AAAAAAAAAAAAAAAGAv4EAAAAAAEAAAAAAAEAAAAAAA8CIgcAAAAABAAAAAAAAAAAAAAA/QFTAAAA
AAABAAQAAgANAAAAAAAYAl8AAAAAAAQAAAAAAAAAAAAAAP0BmwUAAAAABAAAAAAAAAAAAAAA/QHK
BQAAAAAOAAAAAAAAAAAAAAAGAiwAAAAAAAAAAAABAAAA/AcAAAUAAgAAAABMaXN0YDEAVG9JbnQz
MgBnZXRfVVRGOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AU3lzdGVtLkRhdGEASUNTaGFycENvZGUuU2hhcnBaaXBMaWIAbXNjb3JsaWIA
U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAU1RfZWIzNDFlYzg2NDQwNGUxODg4ZDZlMDhjMzM1
ZmMyNmQAaW50ZXJmYWNlSW5zdGFuY2VJZABvcGNvSWQAT3BlblJlYWQAQWRkAEd1aWQARGJDb21t
YW5kAFNxbENvbW1hbmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UARmlsZU1vZGUAR2V0TmV4dFNl
cXVlbmNlTnVtYmVyQ29uZmlybU1vZGUAR2V0UmFuZ2UAQnVpbGRNYW5pZmVzdFhtbEZyb21EYXRh
VGFibGUATG9hZE1ldGFkYXRhVGFibGUAbWV0YWRhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAEdldEZpbGVOYW1lAHNl
dF9EYXRlVGltZQBUb0RhdGVUaW1lAEdldExhc3RXcml0ZVRpbWUAVG9Vbml2ZXJzYWxUaW1lAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29tYmluZQBzZXRfQ29tbWFuZFR5cGUARmFp
bHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UAVHJ5UGFyc2UA
Q3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFdyaXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0
b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0
X1ZhbHVlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBJbmRleE9mAEVuY29kaW5nAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAY29ublN0cmluZwBUb1N0cmluZwBXcml0ZUVsZW1lbnRTdHJpbmcARmx1c2gA
TWF0aABQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTVF9lYjM0MWVjODY0NDA0ZTE4ODhkNmUwOGMzMzVmYzI2ZC5kbGwARmlsbABTeXN0
ZW0uWG1sAEZpbGVTdHJlYW0AWmlwT3V0cHV0U3RyZWFtAGdldF9JdGVtAFN5c3RlbQBUcmltAEVu
dW0AcmVzb3VyY2VNYW4AT3BlbgBNaW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0
aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdD
b21wYXJpc29uAENvcHlUbwBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAElDU2hhcnBDb2RlLlNo
YXJwWmlwTGliLlppcABDaGFyAG5leHRTZXF1ZW5jZU51bWJlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AFNlcXVlbmNlTnVtYmVyTWFuYWdlcgBzZXF1ZW5jZU51bWJlck1hbmFnZXIATG9naWNhQ2FyZHMu
SW50UGxhdC5Db21tb24uSGVscGVyAFNxbFBhcmFtZXRlcgBTdHJpbmdXcml0ZXIAWG1sV3JpdGVy
AFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAERiRGF0YUFkYXB0ZXIAU3FsRGF0YUFkYXB0ZXIAR2V0
RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9lYjM0MWVjODY0NDA0ZTE4ODhk
NmUwOGMzMzVmYzI2ZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9k
ZXMAU1RfZWIzNDFlYzg2NDQwNGUxODg4ZDZlMDhjMzM1ZmMyNmQuUHJvcGVydGllcwBnZXRfVmFy
aWFibGVzAEdldEZpbGVzAGJhdGNoRmlsZU5hbWVzAFhtbFdyaXRlclNldHRpbmdzAEVxdWFscwBT
eXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAUmVnZXhPcHRpb25zAGdldF9QYXJhbWV0ZXJz
AFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBDb25jYXQAT2JqZWN0AFNlbGVj
dABQYWRMZWZ0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AHNldF9JbmRlbnQAU3lzdGVtLkRh
dGEuU3FsQ2xpZW50AFdyaXRlRW5kRWxlbWVudABXcml0ZVN0YXJ0RWxlbWVudABXcml0ZUVuZERv
Y3VtZW50AFdyaXRlU3RhcnREb2N1bWVudABnZXRfQ3VycmVudABnZXRfQ291bnQAVHJpbVN0YXJ0
AENvbnZlcnQATW92ZU5leHQAU3lzdGVtLlRleHQAZ2V0X05vdwBEYXRhUm93AFJlZ2V4AHNlcXVl
bmNlTnVtYmVyU3ViS2V5AGdldF9Bc3NlbWJseQBDcmVhdGVEaXJlY3RvcnkAQ2xvc2VFbnRyeQBa
aXBFbnRyeQBQdXROZXh0RW50cnkAb3BfRXF1YWxpdHkARW1wdHkAAAArVQBzAGUAcgA6ADoASQBz
AEMAbwBsAGMAbwBPAHYAZQByAHIAaQBkAGUAAANZAAAjVQBzAGUAcgA6ADoAQQBUAE8AUwBDAG8A
bABjAG8AaQBkAAAjVQBzAGUAcgA6ADoAQwBvAHUAbgB0AHIAeQBDAG8AZABlAAAZeQB5AE0ATQBk
AGQASABIAG0AbQBzAHMAAENVAHMAZQByADoAOgBEAGUAcwB0AGkAbgBhAHQAaQBvAG4ATQBhAG4A
aQBmAGUAcwB0AEYAaQBsAGUAUABhAHQAaAAAI1UAcwBlAHIAOgA6AEUAbgB2AGkAcgBvAG4AbQBl
AG4AdAAAH1UAcwBlAHIAOgA6AFoAaQBwAFAAcgBlAGYAaQB4AAAnVQBzAGUAcgA6ADoAVwBvAHIA
awBpAG4AZwBGAG8AbABkAGUAcgAADU8AVQBUAFAAVQBUAAAhVQBzAGUAcgA6ADoATwB1AHQAcAB1
AHQAUABhAHQAaAAAM1UAcwBlAHIAOgA6AEkAbgB0AGUAcgBmAGEAYwBlAEkAbgBzAHQAYQBuAGMA
ZQBJAGQAADlVAHMAZQByADoAOgBDAG8AbgBmAGkAZwBDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdABy
AGkAbgBnAAA3VQBzAGUAcgA6ADoAQQB1AGQAaQB0AEMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIA
aQBuAGcAAClVAHMAZQByADoAOgBFAEkARABJAG4AdABlAHIAZgBhAGMAZQBJAGQAAE9VAHMAZQBy
ADoAOgBJAG4AdgBvAGkAYwBlAEYAdQBsAGYAaQBsAG0AZQBuAHQAQwBvAG4AbgBlAGMAdABpAG8A
bgBTAHQAcgBpAG4AZwAAIVAAcgBvAHYAaQBkAGUAcgA9AFsAXgA7AF0AKgA7AD8AAAEAVVUAcwBl
AHIAOgA6AEkAbgB2AG8AaQBjAGUARgB1AGwAZgBpAGwAbQBlAG4AdABJAG4AdABlAHIAZgBhAGMA
ZQBJAG4AcwB0AGEAbgBjAGUASQBkAAAZbQBhAG4AaQBmAGUAcwB0AC4AeABtAGwAAAkuAFoASQBQ
AAAlVQBzAGUAcgA6ADoAWgBpAHAARgBpAGwAZQBMAGkAbQBpAHQAADFPAHUAdABwAHUAdABGAGkA
bABlAFMAZQBxAHUAZQBuAGMAZQBOAHUAbQBiAGUAcgAAA18AAAsuAFoASQBQAF8AAEdUAHIAbgBL
ADAANQBfAEUARABJAEQAQQBUAEEATwBOAEwAWQBfAFIAZQBhAGQATQBhAG4AaQBmAGUAcwB0AEQA
YQB0AGEAAClAAEkAbgB0AGUAcgBmAGEAYwBlAEkAbgBzAHQAYQBuAGMAZQBJAGQAAH9oAHQAdABw
ADoALwAvAHcAdwB3AC4AYQB0AG8AcwB3AG8AcgBsAGQAbABpAG4AZQAuAGMAbwBtAC8AdwBsAGkA
LwBzAGgAZQBsAGwALwBwAGEAcgBzAGkAbgBnAC8AaAAzAGUALwBtAGEAbgBpAGYAZQBzAHQALwAx
AC4AMAAACWUAaQBkAHMAABlmAGkAbABlAE4AYQBtAGUAIAA9ACAAJwABAycAAQUnACcAAQdlAGkA
ZAAAHWEAYwBjAG8AdQBuAHQARwByAG8AdQBwAEkAZAAAIVIAZQBjAG8AcgBkACAATgBvAHQAIABG
AG8AdQBuAGQAAA1vAHAAYwBvAEkAZAAACXQAeQBwAGUAAAdOAEEAVAAAEWYAaQBsAGUATgBhAG0A
ZQAAFWYAaQBsAGUAZgBvAHIAbQBhAHQAACFuAHUAbQBiAGUAcgBPAGYASQBuAHYAbwBpAGMAZQBz
AAADMAAAF2kAbgB2AG8AaQBjAGUARABhAHQAZQAAD2QAdQBlAEQAYQB0AGUAAA9kAGUAbABjAG8A
SQBkAAAVeQB5AHkAeQAtAE0ATQAtAGQAZAABcVMAVABfAGUAYgAzADQAMQBlAGMAOAA2ADQANAAw
ADQAZQAxADgAOAA4AGQANgBlADAAOABjADMAMwA1AGYAYwAyADYAZAAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAHneBy6uluZCrhKOcXzZTwwABCABAQgDIAABBSAB
ARERBCABAQ4GIAEBEYCROwcfDg4ODg4RQQ4OEkUVEkkBDggIEU0dDggODggVEkkBDhUSSQEODg4V
EVEBDg4SVRJZEl0OEl0SVRJhAgYOBSAAEoClBSAAEoCpBiABEoCtHAMgABwDIAAOBQACAg4OBSAC
DggDBAAAEU0EIAARTQQgAQ4OBQACDg4OBCABARwEAAECDgYAARKAuQ4HAAICDhARQQcgBAEODg4O
CQAEDg4ODhGAwQUAAR0ODgUVEkkBDgQAAQ4OByACAg4RgMUHIAIIDhGAxQUgAQETAAQAAQgcAyAA
CAUAAggICAogAhUSSQETAAgICCAAFRFRARMABRURUQEOBCAAEwADIAACByADCA4OEUEFAAEOHQ4H
IAIBDhGA2QYgAQESgN0FAAERTQ4FIAEBEU0FIAEBEl0FAAESVQ4FAAASgOULIAQBEoDdEoDlCAIK
BwQSRRJlEmkSbQYgAgEOEmUGIAEBEYDxBSAAEoD1ByACEoD5DhwFIAEBEmkFIAEIEkUVBwkOEnES
dRURUQEODh0SeRJ5EU0OBCABAQIKAAISdRKA6RKBBQUgAgEODgUgAg4ODgYAAw4ODg4GIAEdEnkO
BSABDh0DBCABHA4FAAERTRwIAAESgQ0RgREFIAASgRUHIAIBDhKBFQi3elxWGTTgiQiJhF3NgIDM
kQhvqhaBDUGPQAgbA+as8RZPczBPAHUAdABwAHUAdABGAGkAbABlAFMAZQBxAHUAZQBuAGMAZQBO
AHUAbQBiAGUAcgAEAAAAAAQBAAAAAgYIAwYSPQQGEoCJBAYSgI0DBhIQAwYRFAYgAhJFDg4LIAMO
EkUVEkkBDg4FAAASgIkFAAASgI0GAAEBEoCNBAAAEhADAAABBQgAEoCJBQgAEoCNBAgAEhAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2ViMzQx
ZWM4NjQ0MDRlMTg4OGQ2ZTA4YzMzNWZjMjZkAAAFAQAAAAAIAQADQ0dJAAAZAQAUQ29weXJpZ2h0
IEAgQ0dJIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuOAEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC44AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAMEYAAAAAAAAAAAAA
SkYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxGAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAACYE
AAAAAAAAAAAAACYENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQCAepIkAAABAIB6kiQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASG
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABiAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAKAAEAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAABDAEcASQAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBlAGIAMwA0ADEAZQBjADgANgA0ADQAMAA0AGUAMQA4ADgAOABkADYAZQAwADgAYwAzADMANQBm
AGMAMgA2AGQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAzADYA
MgAuADMAMQAzADYAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBl
AGIAMwA0ADEAZQBjADgANgA0ADQAMAA0AGUAMQA4ADgAOABkADYAZQAwADgAYwAzADMANQBmAGMA
MgA2AGQALgBkAGwAbAAAAE4AFQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgAEMARwBJACAAMgAwADIANQAAAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZQBiADMANAAxAGUAYwA4ADYANAA0ADAANABlADEAOAA4ADgAZAA2AGUA
MAA4AGMAMwAzADUAZgBjADIANgBkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGUAYgAzADQAMQBlAGMAOAA2ADQANAAwADQAZQAxADgAOAA4AGQANgBlADAA
OABjADMAMwA1AGYAYwAyADYAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAzADYAMgAuADMAMQAzADYAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAzADYAMgAuADMAMQAzADYAMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABcNgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{6E09007E-6404-4762-A914-8FBDD00B4269}"
          DTS:From="Package\Sequence Container\Zip the files"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Sequence Container 1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{0D2535C3-0C77-4CA0-8DE5-FD1363A1FAE4}"
          DTS:From="Package\Sequence Container\Sequence Container 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\ESQL EDI_EID_Tracking_Datastore_Insert" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 14]"
          DTS:CreationName=""
          DTS:DTSID="{9E1F4412-5F51-4F7A-B143-2F0A070CD577}"
          DTS:From="Package\Sequence Container\SQL GET Colco override flag"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 14"
          DTS:To="Package\Sequence Container\SQL - Populate PeppolDataOnly data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{2880D7F4-D82B-4BFB-9B9D-FB36E4B10643}"
          DTS:From="Package\Sequence Container\SQL Get interfaceid for OU"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\Generate EDI XML Files" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{0760B4DA-9A6C-4470-A1CA-83B657A76C67}"
          DTS:From="Package\Sequence Container\Generate EDI XML Files"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Sequence Container\Zip the files" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{47E0C01E-552D-4E47-A667-DA9816382E61}"
          DTS:From="Package\Sequence Container\SQL - Populate PeppolDataOnly data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Sequence Container\SQL Get interfaceid for OU" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL - Get Invoiced RG Count PeppolDataOnly"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{43DD9511-2268-47F8-A5BB-0F4F2C63FB73}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL - Get Invoiced RG Count PeppolDataOnly"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CC45E353-B43D-402B-BA97-86B2FCC5941E}"
          SQLTask:SqlStatementSource="EXEC [dbo].[TrnK05_EDIDATAONLY_GetInvoicedReportingGroupsCount] ?,?,?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::RGCountPeppolDataOnly" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::InvoiceFulfilmentInterfaceInstanceId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::CountryCode"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="2"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::FileFormatPeppoIDataOnly"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Get ATOS File Suffix"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7417B4FF-E5CF-493C-B10D-9D0E6DCA6ADD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Get ATOS File Suffix"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5F72D68A-9798-4AF9-86EA-AF29FED5FF48}"
          SQLTask:SqlStatementSource="EXEC  [dbo].[AppConfigurationRead] 'ATOS_File_Suffix'"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Environment" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Get Manifest FilePath"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2DD36178-A4EC-4689-BEA0-1FD4467B63A1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Get Manifest FilePath"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5F72D68A-9798-4AF9-86EA-AF29FED5FF48}"
          SQLTask:SqlStatementSource="EXEC [TransformationEndpointReadInputPath] ?,'Manifest'"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::sourcePathManifestFile" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::InterfaceInstanceId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="130"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL_Get Country Suffix"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{64649853-2A86-4A16-A261-A8A5D902D150}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL_Get Country Suffix"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">2,7,OnError,9,OnWarning</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnWarning"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:SelectedLogProviders>
          <DTS:SelectedLogProvider
            DTS:InstanceID="{F6767D84-2965-4518-8B68-2A85729B7BA8}" />
        </DTS:SelectedLogProviders>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5F72D68A-9798-4AF9-86EA-AF29FED5FF48}"
          SQLTask:SqlStatementSource="EXEC dbo.ConfigurationRead ?,'CountrySuffix'"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::CountrySuffix" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::InterfaceInstanceId"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="72"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9D5FA08C-41B9-41F2-9156-216E3E91DC28}"
      DTS:From="Package\Script Task Write Audit Package Initiated"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\SQL Get Manifest FilePath" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{05127107-74C5-493B-B884-3502C5E17B2A}"
      DTS:From="Package\SQL Get Manifest FilePath"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\SQL Get ATOS File Suffix" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{F41C2F6E-84F1-4951-B0A4-D038282713E0}"
      DTS:From="Package\SQL Get ATOS File Suffix"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\SQL_Get Country Suffix" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{70B998E5-2B48-4CE0-ADB7-DAB32317FD14}"
      DTS:From="Package\SQL_Get Country Suffix"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\SCR Construct InvoiceFulFilment Connection String" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C433BE1B-F1C6-4A1C-9057-BB4D951860E9}"
      DTS:From="Package\SCR Construct InvoiceFulFilment Connection String"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Script Task - Obtain the parentInterfaceInstanceId" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{FB7C1619-F6C5-4EB8-B221-CDEFFC90A8B7}"
      DTS:From="Package\Script Task - Obtain the parentInterfaceInstanceId"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Execute SQL Task - Get ATOS ColcoId" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{12EA8390-A957-4C31-B274-D1AF0B76ED02}"
      DTS:From="Package\Delete EDIUBL2_DATAONLYFormatData"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\EPT - Call IF Delete Package" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{D9278B8F-C5BD-49A8-9C62-F53EACA651E7}"
      DTS:From="Package\SQL - Get Invoiced RG Count PeppolDataOnly"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Sequence Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{5E082F11-C778-4F20-96DF-EB6057D23B8D}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Delete EDIUBL2_DATAONLYFormatData" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{EF277D1E-5405-455D-9AF1-FD79F9BEF590}"
      DTS:From="Package\EPT - Call IF Delete Package"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\SCR - Log Package Completion Message" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{7D262FF3-D0CB-4E04-835A-2B142B5695E7}"
      DTS:From="Package\Execute SQL Task - Get ATOS ColcoId"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\SQL - Get Invoiced RG Count PeppolDataOnly" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="283,42"
          Id="Package\Delete EDIUBL2_DATAONLYFormatData"
          TopLeft="30.0000000000003,1955.5" />
        <NodeLayout
          Size="222,42"
          Id="Package\EPT - Call IF Delete Package"
          TopLeft="60.5000000000003,2057.5" />
        <NodeLayout
          Size="271,42"
          Id="Package\Execute SQL Task - Get ATOS ColcoId"
          TopLeft="36.0000000000001,623.5" />
        <NodeLayout
          Size="282,42"
          Id="Package\SCR - Log Package Completion Message"
          TopLeft="30.5000000000003,2159.5" />
        <NodeLayout
          Size="332,48"
          Id="Package\SCR Construct InvoiceFulFilment Connection String"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="322,42"
          Id="Package\Script Task - Obtain the parentInterfaceInstanceId"
          TopLeft="10.5000000000001,521.5" />
        <NodeLayout
          Size="278,42"
          Id="Package\Script Task Write Audit Package Initiated"
          TopLeft="32.5,5.5" />
        <NodeLayout
          Size="220,43"
          Id="Package\Sequence Container\ESQL EDI_EID_Tracking_Datastore_Insert"
          TopLeft="26.0000000000001,927.5" />
        <NodeLayout
          Size="198,42"
          Id="Package\Sequence Container\Generate EDI XML Files"
          TopLeft="37,311.5" />
        <NodeLayout
          Size="134,42"
          Id="Package\Sequence Container\Sequence Container 1\Check For Zip Files In Output"
          TopLeft="12,5.5" />
        <NodeLayout
          Size="136,43"
          Id="Package\Sequence Container\Sequence Container 1\Foreach Loop Container for each zip file\SQL Output Path"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="150,104"
          Size="147,146"
          Id="Package\Sequence Container\Sequence Container 1\Foreach Loop Container for each zip file"
          TopLeft="5.50000000000004,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Sequence Container 1.PrecedenceConstraints[Constraint]"
          TopLeft="79,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="158,309"
          Size="158,352"
          Id="Package\Sequence Container\Sequence Container 1"
          TopLeft="57.0000000000001,515.5" />
        <NodeLayout
          Size="261,42"
          Id="Package\Sequence Container\SQL - Populate PeppolDataOnly data"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="221,42"
          Id="Package\Sequence Container\SQL GET Colco override flag"
          TopLeft="25.5,5.5" />
        <NodeLayout
          Size="211,42"
          Id="Package\Sequence Container\SQL Get interfaceid for OU"
          TopLeft="30.5,209.5" />
        <NodeLayout
          Size="135,42"
          Id="Package\Sequence Container\Zip the files"
          TopLeft="68.5000000000001,413.5" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="136,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="136,867.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 14]"
          TopLeft="136,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="136,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="136,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="136,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="272,1026"
          Size="272,1068"
          Id="Package\Sequence Container"
          TopLeft="35.5000000000002,827.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\SQL - Get Invoiced RG Count PeppolDataOnly"
          TopLeft="86.5000000000001,725.5" />
        <NodeLayout
          Size="206,42"
          Id="Package\SQL Get ATOS File Suffix"
          TopLeft="68.5,209.5" />
        <NodeLayout
          Size="210,42"
          Id="Package\SQL Get Manifest FilePath"
          TopLeft="66.5,107.5" />
        <NodeLayout
          Size="197,42"
          Id="Package\SQL_Get Country Suffix"
          TopLeft="73.0000000000001,311.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="171.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="171.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="171.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="171.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="171.5,461.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="171.5,563.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="171.5,1997.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="171.5,767.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="171.5,1895.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="171.5,2099.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="171.5,665.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>